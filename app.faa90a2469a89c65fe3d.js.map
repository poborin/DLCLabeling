{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/styles/global.scss?554f","webpack:///./src/.fable/fable-library.3.1.11/Util.js","webpack:///./src/.fable/fable-library.3.1.11/Types.js","webpack:///./src/.fable/fable-library.3.1.11/Reflection.js","webpack:///./src/.fable/fable-library.3.1.11/Int32.js","webpack:///./src/.fable/fable-library.3.1.11/Numeric.js","webpack:///./src/.fable/fable-library.3.1.11/lib/long.js","webpack:///./src/.fable/fable-library.3.1.11/Long.js","webpack:///./src/.fable/fable-library.3.1.11/Date.js","webpack:///./src/.fable/fable-library.3.1.11/RegExp.js","webpack:///./src/.fable/fable-library.3.1.11/String.js","webpack:///./src/.fable/fable-library.3.1.11/Option.js","webpack:///./src/.fable/fable-library.3.1.11/Choice.js","webpack:///./src/.fable/fable-library.3.1.11/MapUtil.js","webpack:///./src/.fable/Thoth.Json.7.0.0/Types.fs.js","webpack:///./src/.fable/fable-library.3.1.11/Array.js","webpack:///./src/.fable/fable-library.3.1.11/List.js","webpack:///./src/.fable/fable-library.3.1.11/BigInt/n.js","webpack:///./src/.fable/fable-library.3.1.11/lib/big.js","webpack:///./src/.fable/fable-library.3.1.11/Decimal.js","webpack:///./src/.fable/fable-library.3.1.11/BigInt/z.js","webpack:///./src/.fable/fable-library.3.1.11/BigInt.js","webpack:///./src/.fable/fable-library.3.1.11/FSharp.Collections.js","webpack:///./src/.fable/fable-library.3.1.11/System.Text.js","webpack:///./src/.fable/fable-library.3.1.11/FSharp.Core.js","webpack:///./src/.fable/fable-library.3.1.11/Seq.js","webpack:///./src/.fable/fable-library.3.1.11/Map.js","webpack:///./src/.fable/Thoth.Json.7.0.0/Decode.fs.js","webpack:///./src/ConfigDecoder.fs.js","webpack:///./src/.fable/fable-library.3.1.11/AsyncBuilder.js","webpack:///./src/.fable/fable-library.3.1.11/Async.js","webpack:///./src/.fable/fable-library.3.1.11/Observable.js","webpack:///./src/.fable/fable-library.3.1.11/Event.js","webpack:///./src/.fable/fable-library.3.1.11/Timer.js","webpack:///./src/.fable/Fable.Elmish.3.1.0/prelude.fs.js","webpack:///./src/.fable/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./src/.fable/fable-library.3.1.11/Range.js","webpack:///./src/.fable/Fable.Elmish.3.1.0/ring.fs.js","webpack:///./src/.fable/Fable.Elmish.3.1.0/program.fs.js","webpack:///./src/.fable/Feliz.1.64.0/Interop.fs.js","webpack:///./src/.fable/Feliz.1.64.0/React.fs.js","webpack:///./src/.fable/Feliz.1.64.0/ReactInterop.js","webpack:///./src/.fable/Feliz.UseElmish.1.6.0/UseElmish.fs.js","webpack:///./src/LoadConfig.fs.js","webpack:///./src/.fable/fable-library.3.1.11/Double.js","webpack:///./src/Utils.fs.js","webpack:///./src/.fable/fable-library.3.1.11/MutableMap.js","webpack:///./src/.fable/fable-library.3.1.11/Seq2.js","webpack:///./src/LabeledData.fs.js","webpack:///./src/.fable/Feliz.Bulma.2.18.0/ElementBuilders.fs.js","webpack:///./src/.fable/Feliz.UseListener.0.6.3/Listener.fs.js","webpack:///./src/Labeling.fs.js","webpack:///./src/Main.fs.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isHashable","GetHashCode","isDisposable","Dispose","sameConstructor","y","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","done","Error","getEnumerator","GetEnumerator","iterator","toIterator","en","hasNext","undefined","padWithZeros","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","arrayHash","Date","getTime","dateHash","values","map","v","id","safeHash","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","compare","CompareTo","isComparable","compareObjects","max","comparer","createObj","fields","obj","kv","WeakMap","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","partialApply","args","concat","seqToString","self","callStack","cons","entries","join","String","Union","fieldStr","withParens","indexOf","unionToString","tag","other","cases","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","Record","FSharpRef","contentsOrGetter","setter","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","getHashCode","getGenerics","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","record_type","union_type","caseNames","option_type","generic","array_type","NumberStyles","string_type","int32_type","float64_type","gen","endsWith","getRange","unsigned","bitsize","isValid","style","res","exec","replace","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","sign","validResponse","parse","Number","parseInt","isNaN","umin","umax","min","tryParse","defValue","contents","_a","op_UnaryNegation_Int32","symbol","isNumeric","multiply","toFixed","dp","toPrecision","sd","toExponential","toHex","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","isLong","toJSON","substr","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","substring","radixToPower","size","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","LongLib","op_Addition","op_Multiply","op_Division","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_BitwiseAnd","fromInteger","xh","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_b","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","escape","fsFormatRegExp","interpolateRegExp","formatRegExp","isLessThan","numericCompare","printf","input","cont","lastIndex","strParts","matches","strIdx","matchIndex","index","createPrinter","_strParts","_matches","_result","padArg","arg","flags","_padLength","precision","padLength","formatReplacement","interpolate","valIdx","continuePrint","toConsole","console","toText","toLowerCase","toUpperCase","dateToString","zeroFlag","minusFlag","ch","padLeft","_","idx","pattern","intPart","decimalPart","delimiter","xs","from","isRight","search","RegExp","split","splitters","removeEmpty","arguments","splits","reg","startIndex","Some","some","toArray","opt","defaultArg","defaultValue","mapping","FSharpResult$2","FSharpChoice$2","tryGetValue","addToDict","dict","k","getItemFromDict","ErrorReason","Util_Cache$1","Map","Util_Cache$1_$ctor","Helpers_allocateArrayFromCons","append","array1","array2","len1","len2","newArray","i_1","fill","target","targetIndex","start","mapIndexed","source","arrays","arrays_1","totalIdx","totalLength","idx_1","arr_2","initialize","initializer","pairwise","array","reverse","choose","chooser","matchValue","value_2","fold","folder","state","delegateArg0","delegateArg1","chunkBySize","chunkSize","start_1","SR_keyNotFoundAlt","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","xt","yt","i_mut","h_mut","ListEnumerator$1","ListEnumerator$1_$ctor_3002E699","it","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Length","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","tryLast","xs_mut","acc","iterate","action","unitVar0","ofArrayWithTail","tail_1","ofArray","ofSeq","xs_3","root","node","enumerator","xs_5","t_2","ys","tryPick","find","tryFind","value_1","sortWith","arr","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_createN","b","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","x_1","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_isZero","BigNatModule_equal","q","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_mulSchoolBookCarry","r_mut","c_mut","k_mut","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","a","patternInput","patternInput_1","ad","a_1","f_1","z","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","finished","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","collect","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","_arg1","n_2","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","route","BigNatModule_isSmall","BigNatModule_getSmall","P","_this","cmp","NAME","INVALID","INVALID_DP","NUMERIC","nl","charAt","round","Big","DP","RM","rm","more","xc","findIndex","xci","unshift","pop","stringify","NE","PE","isneg","yc","bl","bt","ri","bz","ai","al","rl","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","sqrt","valueOf","_Big_","normalize","version","Decimal","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_$ctor_Z524259A4","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","ComparisonIdentity_Structural","e1","e2","Compare","LanguagePrimitives_FastGenericComparer","SR_notEnoughElements","Enumerator_notStarted","Enumerator_alreadyFinished","Enumerator_Seq","Enumerator_FromFunctions$1","dispose","Enumerator_noReset","Enumerator_FromFunctions$1_$ctor_58C54629","Enumerator_enumerateThenFinally","Enumerator_generateWhileSome","openf","compute","closef","started","curr","finish","matchValue_1","checkNonNull","argName","Operators_NullArg","mkSeq","Enumerator_Seq_$ctor_673A07F2","delay","generator","sources","outerOpt","innerOpt","inner","outer","inner_1","outer_1","ie","Enumerator_concat","unfold","st_1","Enumerator_unfold","ar","singleton_1","toArray_1","toList","ofArray_1","ofSeq_1","generate","generateIndexed","contains","found","iterateIndexed","e_1","skip","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","acc_mut","m_mut","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","MapTreeModule_spliceOutSuccessor","MapTreeModule_iter","MapTreeModule_iterOpt","f_mut","MapTreeModule_copyToArray","MapTreeModule_ofArray","forLoopVar","MapTreeModule_MapIterator$2","stack","MapTreeModule_collapseLHS","stack_mut","isEmpty_1","empty_1","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","this$","combineHash","activePatternResult5203","FSharpMap__ComputeHashCode","that","m1","e1c","e2c","map_1","b1","b2","compareWith","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","FSharpMap__get_Count","thisArg","iterate_1","FSharpMap_$ctor","FSharpMap__Add","FSharpMap__Change","MapTreeModule_change","u","c_1","matchValue_4","MapTreeModule_find","MapTreeModule_mem","FSharpMap__Remove","MapTreeModule_remove","FSharpMap__ToArray","MapTreeModule_toArray","table","change","elements","Helpers_isUndefined","genericMsg","msg","newLine","JSON","errorToString","path","error","reason_1","decoder","string","int","path_1","value_3","value_4","isFinite","outArg","tryParse_3","float","decodeMaybeNull","badPathError","fieldNames","currentPath","tokens","fold_1","acc_1","unwrapWith","errors","Getters$1","_this_1","required","Field","fieldName","fieldValue","field","At","decoder_2","firstPath","firstValue","tupledArg","curPath","curValue","field_1","curValue_1","at","Raw","decoder_4","optional","fieldName_1","decoder_5","path_2","fieldNames_1","decoder_7","firstPath_1","firstValue_1","lastValue","optionalAt","decoder_9","pattern_matching_result","v_2","reason","builder","getters","Getters$1_$ctor_4A51B60E","head_1","MinimalConfig","Scorer","Individuals","Uniquebodyparts","Multianimalbodyparts","Skeleton","Bodyparts","SkeletonColor","Dotsize","Alphavalue","Colormap","MinimalConfig$reflection","MinimalConfig__get_IndividualColors","colormap","nshades","CancellationToken","cancelled","_id","_cancelled","_listeners","listener","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","computation1","computation2","Bind","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","emptyContinuation","_x","defaultCancellationToken","catchAsync","work","Choice_makeChoice1Of2","startImmediate","cancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","Observer","onNext","onCompleted","OnNext","OnError","_e","OnCompleted","Event","_subscriber","delegates","_addHandler","forEach","handler","_dotnetDelegates","_removeHandler","_subscribeFromCallback","_subscribeFromObserver","observer","callback","Timer","interval","_enabled","_isDisposed","_intervalId","_timeoutId","Interval","AutoReset","_elapsed","Enabled","setInterval","Trigger","clearTimeout","clearInterval","Log_onError","text","Timer_delay","returnVal","Subscribe","Elapsed","Start","Cmd_exec","dispatch","cmd","Cmd_none","Cmd_batch","cmds","lists","xs_6","Cmd_ofSub","Cmd_OfFunc_result","Cmd_OfAsyncWith_either","task","ofSuccess","ofError","arg_1","Zero","Cmd_OfAsync_start","integralRangeStep","step","stop","stepFn","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","makeRangeStepFunction","rangeDouble","RingState$1","RingBuffer$1","RingBuffer$1__Push_2B595","__","item","wix_1","rix","items_1","wix$0027","ix","items","RingBuffer$1__doubleSize","wix","Program$4","init","update","subscribe","view","setState","syncDispatch","ProgramModule_mkProgram","model","ProgramModule_runWith","program","rb","reentered","nextMsg","msg_1","model$0027","ex_1","rix$0027","RingBuffer$1__Pop","ex_3","ex_2","Interop_reactApi","react","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","ReactInterop_useEffectWithDeps","deps","ReactInterop_useLayoutEffect","useLayoutEffectReact","React_createDisposable_3A5B6456","useReact_useState_FCFD9EF","useState","useReact_useEffect_Z5ECA432F","effect","useReact_useEffect_Z5234A374","dependencies","useReact_useRef_1505","initialValue","useRef","useReact_useMemo_CF4EA67","createFunction","useMemo","useReact_useCallbackRef_7C4B0DD6","callbackFunction","lastRenderCallbackRef","callbackRef","useCallback","ElmishObservable$2","hasDisposedOnce","dispatcher","ElmishObservable$2_$ctor","runProgram","obs","unitVar3","ProgramModule_withSetState","arg00","arg10","ElmishObservable$2__SetState","useFeliz_React__React_useElmish_Static_76E709","ElmishObservable$2__DisposeState","ElmishObservable$2__Dispatch_2B594","useFeliz_React__React_useElmish_Static_Z151674B","useFeliz_React__React_useElmish_Static_78C5B8C8","_arg6","_arg5","State","IsConfigLoaded","Msg","props","objConfig","load","miniConfig","path_14","get$","Required","array_1","path_4","path_3","path_6","value_6","path_5","value_5","path_9","value_9","path_8","value_8","path_7","value_7","path_10","value_10","path_11","value_11","path_12","value_12","path_13","value_13","LoadConfig","ConfigLoader","_arg4","_arg3","createElement","className","children","Children","type","onInput","ev","file","files","reader","FileReader","onload","evt","onerror","evt_1","readAsText","$007CEndsWith$007C_$007C","expected","lastIndexOf","$007CPrefix$007C_$007C","parseFloat$","Dictionary","pairs","hashMap","pair","Dictionary__Add_5BDDA1","Dictionary__Clear","Dictionary__TryFind_2B595","arrayIndex","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__get_Item_2B595","Dictionary__TryFindIndex_2B595","Dictionary__ContainsKey_2B595","Dictionary__set_Item_5BDDA1","clear","groupBy","projection","key_1","Coordinates","X","Y","OffsetX","OffsetY","LabeledData","FileName","Labels","CSVData_AsyncDecode_Z721C83C5","csvFile","initRecord","Files","Scorers","lines","activePatternResult14656","activePatternResult14654","rest_1","activePatternResult14652","Bodypart","x_4","Individual","x_3","x_2","x_5","y_1","Helpers_extractClasses","classes","Helpers_combineClasses","cn","Impl_allowsPassiveEvents","addEventListener","passive","removeEventListener","Impl_adjustPassive","maybeOptions","options","capture","once","Impl_createRemoveOptions","ProjectFile","ImageBlob","DisplayUrl","LabelDrag","ImageTransformation","Scale","Config","ShowQuickView","LoadedImages","SelectedImage","SelectedLabel","PanZoom","ErrorMessage","emptyState","config","selectLoadedFile","element","document","getElementById","bounds","boundsPadding","maxZoom","minZoom","pz","panzoom","on","getTransform","scale","onPanZoom","deleteSeletedLabel","label_0","label_1","label","grouped","newLabels","circle","removeAttribute","findLabels","selectedImage","labeledData","image","addNewLabeledData","newLabel_0","newLabel_1","newLabel_2","newLabel","individual_1","bodypart_1","labels","individual","arg0","arg0_1","drag","drag_1","newValue","value_192","pause","pz_1","resume","selectedLabel_1","array2_10","bodyparts","individuals","append_1","group","array1_8","array2_8","filter","array1_1","array2_1","array1_3","array2_3","array1_4","array2_4","array1_6","array2_6","arg0_2","arg0_3","fileName","fileContent","anchor","setAttribute","encodeURI","click","arg10_1","message","loadProjectFiles","fileEvent","fileList","map_2","blob","readAsDataURL","ev_1","loadFile","getFileDisplayUrl","selectedBorder","border","borderRadius","svgElements","transform","circles","tupledArg_1","bodypart","coordinate","content","position","cx","cy","fillOpacity","onClick","stroke","strokeWidth","clientWidth","naturalWidth","react$002Ddraggable","_arg2","deltaX","deltaY","d_1","getSvgCircle","toArray_2","tupledArg_2","c1_1","c2_1","c1","c2","strokeColor","opacity","x1","y1","x2","y2","strokeOpacity","containsKey","array1_2","array2_2","LabelingCanvas","props_28","elms_2","elms_1","elms","elms_10","elms_5","props_15","elms_4","elms_3","elms_9","elms_8","elms_7","elms_6","props_21","props_45","elms_18","props_58","elms_16","elms_15","props_47","props_51","props_54","props_76","children_21","patternInput_4","children_23","state_1","action_1","addOptions","removeOptions","fn","action_3","preventDefault","addOptions_1","removeOptions_1","fn_1","children_27","webkitdirectory","onChange","ev_2","append_2","elms_11","elms_14","props_42","elms_13","elms_12","children_12","children_14","ev_3","inputRecord","value_79","valueAsNumber","ev_4","inputRecord_1","value_94","overflow","userSelect","ev_5","boundingRect","getBoundingClientRect","clientX","clientY","top","map_3","zIndex","src","overflowX","dispathc","props_1","props_3","selectedIndex","selected","ev_6","props_70","elms_17","htmlFor","CurrentConfig","State$reflection","Msg$reflection","DLCLabeling","config_1","render"],"mappings":"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","file":"app.faa90a2469a89c65fe3d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([12,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nexport {};","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\n// export function makeRangeStepFunction(step: Long, last: Long, unsigned: boolean) {\n//   const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Long) => {\n//     const comparedWithLast = LongLib.compare(x, last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","import { Union } from \"./Types.js\";\nimport { union_type } from \"./Reflection.js\";\nimport { some } from \"./Option.js\";\n\nexport class FSharpResult$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ok\", \"Error\"];\n    }\n}\n\nexport function FSharpResult$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\n}\n\nexport function Result_Map(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, mapping(result.fields[0]));\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport function Result_MapError(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, mapping(result.fields[0]));\n    }\n}\n\nexport function Result_Bind(binder, result) {\n    if (result.tag === 0) {\n        return binder(result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport class FSharpChoice$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n}\n\nexport function FSharpChoice$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class FSharpChoice$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n}\n\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\n}\n\nexport class FSharpChoice$4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n}\n\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\n}\n\nexport class FSharpChoice$5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n}\n\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\n}\n\nexport class FSharpChoice$6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n}\n\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\n}\n\nexport class FSharpChoice$7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n}\n\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\n}\n\nexport function Choice_makeChoice1Of2(x) {\n    return new FSharpChoice$2(0, x);\n}\n\nexport function Choice_makeChoice2Of2(x) {\n    return new FSharpChoice$2(1, x);\n}\n\nexport function Choice_tryValueIfChoice1Of2(x) {\n    if (x.tag === 0) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Choice_tryValueIfChoice2Of2(x) {\n    if (x.tag === 1) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","import { FSharpRef, Record, Union } from \"../fable-library.3.1.11/Types.js\";\nimport { record_type, class_type, tuple_type, lambda_type, union_type, list_type, obj_type, string_type } from \"../fable-library.3.1.11/Reflection.js\";\nimport { FSharpResult$2 } from \"../fable-library.3.1.11/Choice.js\";\nimport { addToDict, tryGetValue } from \"../fable-library.3.1.11/MapUtil.js\";\nimport { replace } from \"../fable-library.3.1.11/RegExp.js\";\n\nexport class ErrorReason extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BadPrimitive\", \"BadPrimitiveExtra\", \"BadType\", \"BadField\", \"BadPath\", \"TooSmallArray\", \"FailMessage\", \"BadOneOf\"];\n    }\n}\n\nexport function ErrorReason$reflection() {\n    return union_type(\"Thoth.Json.ErrorReason\", [], ErrorReason, () => [[[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type], [\"Item3\", string_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]], [[\"Item\", string_type]], [[\"Item\", list_type(string_type)]]]);\n}\n\nexport class CaseStrategy extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"PascalCase\", \"CamelCase\", \"SnakeCase\"];\n    }\n}\n\nexport function CaseStrategy$reflection() {\n    return union_type(\"Thoth.Json.CaseStrategy\", [], CaseStrategy, () => [[], [], []]);\n}\n\nexport class ExtraCoders extends Record {\n    constructor(Hash, Coders) {\n        super();\n        this.Hash = Hash;\n        this.Coders = Coders;\n    }\n}\n\nexport function ExtraCoders$reflection() {\n    return record_type(\"Thoth.Json.ExtraCoders\", [], ExtraCoders, () => [[\"Hash\", string_type], [\"Coders\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, tuple_type(lambda_type(obj_type, obj_type), lambda_type(string_type, lambda_type(obj_type, union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [obj_type, tuple_type(string_type, ErrorReason$reflection())], FSharpResult$2, () => [[[\"ResultValue\", obj_type]], [[\"ErrorValue\", tuple_type(string_type, ErrorReason$reflection())]]]))))])]]);\n}\n\nexport class Util_Cache$1 {\n    constructor() {\n        this.cache = (new Map([]));\n    }\n}\n\nexport function Util_Cache$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Util.Cache`1\", [gen0], Util_Cache$1);\n}\n\nexport function Util_Cache$1_$ctor() {\n    return new Util_Cache$1();\n}\n\nexport function Util_Cache$1__GetOrAdd_43981464(__, key, factory) {\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(__.cache, key, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        const x_1 = factory();\n        addToDict(__.cache, key, x_1);\n        return x_1;\n    }\n}\n\nexport const Util_CachedEncoders = Util_Cache$1_$ctor();\n\nexport const Util_CachedDecoders = Util_Cache$1_$ctor();\n\nexport function Util_Casing_lowerFirst(str) {\n    return str.slice(void 0, 0 + 1).toLowerCase() + str.slice(1, str.length);\n}\n\nexport function Util_Casing_convert(caseStrategy, fieldName) {\n    switch (caseStrategy.tag) {\n        case 2: {\n            return replace(Util_Casing_lowerFirst(fieldName), \"[A-Z]\", \"_$0\").toLowerCase();\n        }\n        case 0: {\n            return fieldName;\n        }\n        default: {\n            return Util_Casing_lowerFirst(fieldName);\n        }\n    }\n}\n\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = ((totalLength + arr_1.length) | 0);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = ((totalIdx + 1) | 0);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = ((iTrue + 1) | 0);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = ((iFalse + 1) | 0);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const res = [];\n    for (let i = 0; i <= (array.length - 1); i++) {\n        const matchValue = chooser(array[i]);\n        if (matchValue != null) {\n            const y = value_2(matchValue);\n            void (res.push(y));\n        }\n    }\n    if ((typeof cons) === \"function\") {\n        return map((x) => x, res, cons);\n    }\n    else {\n        return res;\n    }\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function allPairs(xs, ys) {\n    const len1 = xs.length | 0;\n    const len2 = ys.length | 0;\n    const res = new Array((len1 * len2));\n    for (let i = 0; i <= (xs.length - 1); i++) {\n        for (let j = 0; j <= (ys.length - 1); j++) {\n            res[(i * len2) + j] = [xs[i], ys[j]];\n        }\n    }\n    return res;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = (comparer(array1[i], array2[i]) | 0);\n                i = ((i + 1) | 0);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function tryExactlyOne(array) {\n    if (array.length === 1) {\n        return some(array[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { join } from \"./String.js\";\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\n\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\n\nexport const SR_inputListWasEmpty = \"List was empty\";\n\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport class FSharpList extends Record {\n    constructor(head, tail) {\n        super();\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        const xs = this;\n        return (\"[\" + join(\"; \", xs)) + \"]\";\n    }\n    Equals(other) {\n        const xs = this;\n        if (xs === other) {\n            return true;\n        }\n        else {\n            const loop = (xs_1_mut, ys_1_mut) => {\n                loop:\n                while (true) {\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                    const matchValue = [xs_1.tail, ys_1.tail];\n                    if (matchValue[0] != null) {\n                        if (matchValue[1] != null) {\n                            const xt = matchValue[0];\n                            const yt = matchValue[1];\n                            if (equals(xs_1.head, ys_1.head)) {\n                                xs_1_mut = xt;\n                                ys_1_mut = yt;\n                                continue loop;\n                            }\n                            else {\n                                return false;\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                    else if (matchValue[1] != null) {\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                    break;\n                }\n            };\n            return loop(xs, other);\n        }\n    }\n    GetHashCode() {\n        const xs = this;\n        const loop = (i_mut, h_mut, xs_1_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\n                const matchValue = xs_1.tail;\n                if (matchValue != null) {\n                    const t = matchValue;\n                    if (i > 18) {\n                        return h | 0;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\n                        xs_1_mut = t;\n                        continue loop;\n                    }\n                }\n                else {\n                    return h | 0;\n                }\n                break;\n            }\n        };\n        return loop(0, 0, xs) | 0;\n    }\n    CompareTo(other) {\n        const xs = this;\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1.tail, ys_1.tail];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const xt = matchValue[0];\n                        const yt = matchValue[1];\n                        const c = compare(xs_1.head, ys_1.head) | 0;\n                        if (c === 0) {\n                            xs_1_mut = xt;\n                            ys_1_mut = yt;\n                            continue loop;\n                        }\n                        else {\n                            return c | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1] != null) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                break;\n            }\n        };\n        return loop(xs, other) | 0;\n    }\n    GetEnumerator() {\n        const xs = this;\n        return ListEnumerator$1_$ctor_3002E699(xs);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const xs = this;\n        return getEnumerator(xs);\n    }\n}\n\nexport function FSharpList$reflection(gen0) {\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\n}\n\nexport class ListEnumerator$1 {\n    constructor(xs) {\n        this.xs = xs;\n        this.it = this.xs;\n        this.current = null;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        const matchValue = __.it.tail;\n        if (matchValue != null) {\n            const t = matchValue;\n            __.current = __.it.head;\n            __.it = t;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        const __ = this;\n        __.it = __.xs;\n        __.current = null;\n    }\n    Dispose() {\n    }\n}\n\nexport function ListEnumerator$1$reflection(gen0) {\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\n}\n\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\n    return new ListEnumerator$1(xs);\n}\n\nexport function FSharpList_get_Empty() {\n    return new FSharpList(null, void 0);\n}\n\nexport function FSharpList_Cons_305B8EAC(x, xs) {\n    return new FSharpList(x, xs);\n}\n\nexport function FSharpList__get_IsEmpty(xs) {\n    return xs.tail == null;\n}\n\nexport function FSharpList__get_Length(xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                i_mut = (i + 1);\n                xs_1_mut = matchValue;\n                continue loop;\n            }\n            else {\n                return i | 0;\n            }\n            break;\n        }\n    };\n    return loop(0, xs) | 0;\n}\n\nexport function FSharpList__get_Head(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return xs.head;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Tail(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return matchValue;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                if (i === index) {\n                    return xs_1.head;\n                }\n                else {\n                    i_mut = (i + 1);\n                    xs_1_mut = matchValue;\n                    continue loop;\n                }\n            }\n            else {\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function empty() {\n    return FSharpList_get_Empty();\n}\n\nexport function cons(x, xs) {\n    return FSharpList_Cons_305B8EAC(x, xs);\n}\n\nexport function singleton(x) {\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\n}\n\nexport function isEmpty(xs) {\n    return FSharpList__get_IsEmpty(xs);\n}\n\nexport function length(xs) {\n    return FSharpList__get_Length(xs);\n}\n\nexport function head(xs) {\n    return FSharpList__get_Head(xs);\n}\n\nexport function tryHead(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        return void 0;\n    }\n    else {\n        return some(FSharpList__get_Head(xs));\n    }\n}\n\nexport function tail(xs) {\n    return FSharpList__get_Tail(xs);\n}\n\nexport function tryLast(xs_mut) {\n    tryLast:\n    while (true) {\n        const xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return void 0;\n        }\n        else {\n            const t = FSharpList__get_Tail(xs);\n            if (FSharpList__get_IsEmpty(t)) {\n                return some(FSharpList__get_Head(xs));\n            }\n            else {\n                xs_mut = t;\n                continue tryLast;\n            }\n        }\n        break;\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const loop = (xs_1_mut, ys_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\n            if (matchValue[0]) {\n                if (matchValue[1]) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (matchValue[1]) {\n                return 1;\n            }\n            else {\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\n                if (c === 0) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\n                    continue loop;\n                }\n                else {\n                    return c | 0;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs, ys) | 0;\n}\n\nexport function toArray(xs) {\n    const len = FSharpList__get_Length(xs) | 0;\n    const res = fill(new Array(len), 0, len, null);\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (!FSharpList__get_IsEmpty(xs_1)) {\n                res[i] = FSharpList__get_Head(xs_1);\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(0, xs);\n    return res;\n}\n\nexport function fold(folder, state, xs) {\n    let acc = state;\n    let xs_1 = xs;\n    while (!FSharpList__get_IsEmpty(xs_1)) {\n        acc = folder(acc, FSharpList__get_Head(xs_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n    }\n    return acc;\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function foldIndexed(folder, state, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, state, xs);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    let acc = state;\n    let xs_1 = xs;\n    let ys_1 = ys;\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n        ys_1 = FSharpList__get_Tail(ys_1);\n    }\n    return acc;\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function unfold(gen, state) {\n    const loop = (acc_mut, node_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, node = node_mut;\n            const matchValue = gen(acc);\n            if (matchValue != null) {\n                acc_mut = matchValue[1];\n                node_mut = (t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t));\n                continue loop;\n            }\n            else {\n                return node;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(state, root);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function toSeq(xs) {\n    return xs;\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = xs.length - 1; i >= 0; i--) {\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\n}\n\nexport function ofSeq(xs) {\n    let xs_3, t;\n    if (isArrayLike(xs)) {\n        return ofArray(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        const root = FSharpList_get_Empty();\n        let node = root;\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                node = (xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t)));\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        const xs_5 = node;\n        const t_2 = FSharpList_get_Empty();\n        xs_5.tail = t_2;\n        return FSharpList__get_Tail(root);\n    }\n}\n\nexport function concat(lists) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    const action = (xs) => {\n        node = fold((acc, x) => {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }, node, xs);\n    };\n    if (isArrayLike(lists)) {\n        lists.forEach(action);\n    }\n    else if (lists instanceof FSharpList) {\n        iterate(action, lists);\n    }\n    else {\n        const enumerator = getEnumerator(lists);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    const xs_6 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_6.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scan(folder, state, xs) {\n    let xs_4, t_2;\n    const root = FSharpList_get_Empty();\n    let node;\n    const t = new FSharpList(state, void 0);\n    root.tail = t;\n    node = t;\n    let acc = state;\n    let xs_3 = xs;\n    while (!FSharpList__get_IsEmpty(xs_3)) {\n        acc = folder(acc, FSharpList__get_Head(xs_3));\n        node = (xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2)));\n        xs_3 = FSharpList__get_Tail(xs_3);\n    }\n    const xs_6 = node;\n    const t_4 = FSharpList_get_Empty();\n    xs_6.tail = t_4;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scanBack(folder, xs, state) {\n    return ofArray(scanBack_1(folder, toArray(xs), state));\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\n}\n\nexport function collect(mapping, xs) {\n    let xs_1, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    let ys = xs;\n    while (!FSharpList__get_IsEmpty(ys)) {\n        let zs = mapping(FSharpList__get_Head(ys));\n        while (!FSharpList__get_IsEmpty(zs)) {\n            node = (xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t)));\n            zs = FSharpList__get_Tail(zs);\n        }\n        ys = FSharpList__get_Tail(ys);\n    }\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = foldIndexed((i, acc, x) => {\n        const t = new FSharpList(mapping(i, x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const t = new FSharpList(mapping(x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    const root = FSharpList_get_Empty();\n    const node = fold2((acc, x, y) => {\n        const t = new FSharpList(mapping(x, y), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = (t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(0, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                zs_1_mut = FSharpList__get_Tail(zs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(root, xs, ys, zs);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapFold(mapping, state, xs) {\n    const root = FSharpList_get_Empty();\n    const patternInput_1 = fold((tupledArg, x) => {\n        let t;\n        const patternInput = mapping(tupledArg[1], x);\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\n    }, [root, state], xs);\n    const t_2 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_2;\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\n}\n\nexport function tryPick(f, xs) {\n    const loop = (xs_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else {\n                const matchValue = f(FSharpList__get_Head(xs_1));\n                if (matchValue == null) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFind(f, xs) {\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function find(f, xs) {\n    const matchValue = tryFind(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFindBack_1(f, toArray(xs));\n}\n\nexport function findBack(f, xs) {\n    const matchValue = tryFindBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(f, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (f(FSharpList__get_Head(xs_1))) {\n                return i;\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, toArray(xs));\n}\n\nexport function findIndexBack(f, xs) {\n    const matchValue = tryFindIndexBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryItem(n, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (i === n) {\n                return some(FSharpList__get_Head(xs_1));\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function item(n, xs) {\n    return FSharpList__get_Item_Z524259A4(xs, n);\n}\n\nexport function filter(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        if (f(x)) {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }\n        else {\n            return acc;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function partition(f, xs) {\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\n    const root2 = patternInput[1];\n    const root1 = patternInput[0];\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => {\n            let t, t_2;\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\n        };\n    }), [root1, root2], xs);\n    const t_4 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_4;\n    const t_5 = FSharpList_get_Empty();\n    patternInput_1[1].tail = t_5;\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\n}\n\nexport function choose(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const t = new FSharpList(value_1(matchValue), void 0);\n            acc.tail = t;\n            return t;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function contains(value, xs, eq) {\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\n}\n\nexport function initialize(n, f) {\n    let xs, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    for (let i = 0; i <= (n - 1); i++) {\n        node = (xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t)));\n    }\n    const xs_2 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_2.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return fold(f, head(xs), tail(xs));\n    }\n}\n\nexport function reduceBack(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return foldBack(f, tail(xs), head(xs));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f, xs) {\n    return tryFindIndex(f, xs) != null;\n}\n\nexport function exists2(f_mut, xs_mut, ys_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\n        let pattern_matching_result;\n        if (matchValue[0]) {\n            if (matchValue[1]) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1]) {\n            pattern_matching_result = 2;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    xs_mut = FSharpList__get_Tail(xs);\n                    ys_mut = FSharpList__get_Tail(ys);\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sortWith(comparer, xs) {\n    const arr = toArray(xs);\n    arr.sort(comparer);\n    return ofArray(arr);\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, toArray(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\n}\n\nexport function allPairs(xs, ys) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    iterate((x) => {\n        iterate((y) => {\n            let xs_1, t;\n            node = (xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t)));\n        }, ys);\n    }, xs);\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function skip(count_mut, xs_mut) {\n    skip:\n    while (true) {\n        const count = count_mut, xs = xs_mut;\n        if (count <= 0) {\n            return xs;\n        }\n        else if (FSharpList__get_IsEmpty(xs)) {\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n        }\n        else {\n            count_mut = (count - 1);\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skip;\n        }\n        break;\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return xs;\n        }\n        else if (!predicate(FSharpList__get_Head(xs))) {\n            return xs;\n        }\n        else {\n            predicate_mut = predicate;\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skipWhile;\n        }\n        break;\n    }\n}\n\nexport function take(count, xs) {\n    if (count < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\n    }\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function takeWhile(predicate, xs) {\n    const loop = (acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function truncate(count, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function getSlice(startIndex, endIndex, xs) {\n    const len = length(xs) | 0;\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\n    if (startIndex_1 < 0) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\n    }\n    else if (endIndex_1 >= len) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\n    }\n    else if (endIndex_1 < startIndex_1) {\n        return FSharpList_get_Empty();\n    }\n    else {\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\n    }\n}\n\nexport function splitAt(index, xs) {\n    if (index < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\n    }\n    if (index > FSharpList__get_Length(xs)) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    return [take(index, xs), skip(index, xs)];\n}\n\nexport function exactlyOne(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n        return FSharpList__get_Head(xs);\n    }\n    else {\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\n        return some(FSharpList__get_Head(xs));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return ofArray(pairwise_1(toArray(xs)));\n}\n\nexport function windowed(windowSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\n}\n\nexport function transpose(lists) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\n}\n\n","import { Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { toArray, empty, head, tail, isEmpty, cons } from \"../List.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    let x_1, x_3, y_5;\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            res[offset + j] = ((even + (x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - (x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            wj = (y_5 = wj, toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array));\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    return map((x_1) => BigNatModule_FFT_Fp_toInt(x_1), BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array)), Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = (v | 0);\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = (v | 0);\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = ((n.digits[i] + (res << 3)) | 0);\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = (bound | 0);\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = (x_1 | 0);\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = (((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN) | 0);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = ((~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64)))) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = ((n.digits[i] + (BigNatModule_baseN * acc)) | 0);\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = (n.digits[i] | 0);\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = (n.digits[i + d] | 0);\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = (BigNatModule_modbase(x) | 0);\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = BigNatModule_divbase(x);\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = (BigNatModule_modbase(x) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = BigNatModule_divbase(x);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = (BigNatModule_modbase(x_1) | 0);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = (BigNatModule_divbase(x_1) - 1);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            return c !== 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\n        a[i] = (x_3 | 0);\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    const bp = BigNatModule_bound(p) | 0;\n    const r = BigNatModule_createN(bp + 1);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    const r = BigNatModule_createN(p.bound + q.bound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = ((~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64)))) | 0);\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = ((k + 1) | 0);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    let z, i, z_1, i_1, z_2, i_2;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        return ((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0)) >> xbit) | ((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0)) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n    else {\n        return (((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0)) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                i_mut = (i + 1);\n                bi_mut = (bi + enc.bigL);\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = (i | 0);\n        }\n    }\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n                }\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = (i + 1);\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba((x_1, y_1) => BigNatModule_mulKaratsuba(x_1, y_1), x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = ((x_1[j + n] - zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((x_1[j + n] + (BigNatModule_baseN - zLo)) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = ((x_1[j + n] + zLo) | 0);\n        }\n        else {\n            x_1[j + n] = ((zLo - (BigNatModule_baseN - x_1[j + n])) | 0);\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = ((j + 1) | 0);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\n        if (f === 0) {\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = ((n - 1) | 0);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = ((n - 1) | 0);\n                        p = ((p - 1) | 0);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = ((a.digits[i] & b.digits[i]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] | a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] | b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = ((r.digits[i] ^ a.digits[i]) | 0);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = ((r.digits[i_1] ^ b.digits[i_1]) | 0);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            return fromInteger(n.digits[0], true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return cons([k, ten2k], prior);\n            }\n            else {\n                prior_mut = cons([k, ten2k], prior);\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\n        collect:\n        while (true) {\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\n            if (!isEmpty(_arg1)) {\n                const prior_1 = tail(_arg1);\n                const patternInput = BigNatModule_divmod(n_1, head(_arg1)[1]);\n                const nL = patternInput[1];\n                const nH = patternInput[0];\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\n                    isLeading_mut = isLeading;\n                    digits_mut = digits;\n                    n_1_mut = nL;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n                else {\n                    isLeading_mut = isLeading;\n                    digits_mut = collect(false, digits, nL, prior_1);\n                    n_1_mut = nH;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n            }\n            else {\n                const n_2 = BigNatModule_eval32(n_1) | 0;\n                if (isLeading ? (n_2 === 0) : false) {\n                    return digits;\n                }\n                else {\n                    return cons(int32ToString(n_2), digits);\n                }\n            }\n            break;\n        }\n    };\n    const digits_4 = collect(true, empty(), n, route(empty(), 0, BigNatModule_embed(10)));\n    if (isEmpty(digits_4)) {\n        return \"0\";\n    }\n    else {\n        return join(\"\", toArray(digits_4));\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            const isZero = xc.findIndex((xci, idx) => idx >= i && xci > 0) < 0;\n            more = more || !isZero;\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { toString, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = (signInt | 0);\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, (n) => BigNatModule_ofInt32(n));\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\nimport { toString as toString_1 } from \"./Types.js\";\nimport { fold, empty, ofArrayWithTail, cons, toArray, head, skipWhile } from \"./List.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return safeHash(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equals_1(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        return [(currByte ^ (254 << (new Int32Array([0, 1, 2, 3, 4, 5, 6, 7])).find((i) => ((currByte & (1 << i)) > 0)))) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equals_1(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compare_1(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_6, value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compare_1(consumeValue, zero) <= 0) {\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    return reverse(toArray((isPositive ? isHighBitOne : false) ? cons(0, accumBytes_1) : (((!isPositive) ? (!isHighBitOne) : false) ? cons(255, accumBytes_1) : accumBytes_1)));\n                }\n                else {\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\n                    if (isPositive) {\n                        const b0 = currValue & 0xFF;\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        accumBytes_mut = ofArrayWithTail([(value_6 = (currValue >>> 24), value_6 & 0xFF), b2, b1, b0], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\n                        accumBytes_mut = ofArrayWithTail([patternInput_3[0], patternInput_2[0], patternInput_1[0], patternInput[0]], accumBytes);\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min((x, y) => comparePrimitives(x, y), bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        accumUInt32_mut = cons((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        accumUInt32_mut = cons((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32);\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(empty(), 0, bytes.length, false);\n    }\n}\n\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    let len = 0;\n    for (let i = x.buf.length - 1; i >= 0; i--) {\n        len = ((len + x.buf[i].length) | 0);\n    }\n    return len | 0;\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    return substring(toString(x), firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        void StringBuilder__Append_Z721C83C5(builder, s);\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n    }, builder, format);\n}\n\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\n\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\n\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\n\nexport function Enumerator_noReset() {\n    throw (new Error(SR_resetNotSupported));\n}\n\nexport function Enumerator_notStarted() {\n    throw (new Error(SR_enumerationNotStarted));\n}\n\nexport function Enumerator_alreadyFinished() {\n    throw (new Error(SR_enumerationAlreadyFinished));\n}\n\nexport class Enumerator_Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    toString() {\n        const xs = this;\n        const maxCount = 4;\n        let i = 0;\n        let str = \"seq [\";\n        const e = getEnumerator(xs);\n        try {\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                if (i > 0) {\n                    str = (str + \"; \");\n                }\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\n                i = ((i + 1) | 0);\n            }\n            if (i === maxCount) {\n                str = (str + \"; ...\");\n            }\n            return str + \"]\";\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n    GetEnumerator() {\n        const x = this;\n        return x.f();\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const x = this;\n        return x.f();\n    }\n}\n\nexport function Enumerator_Seq$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\n}\n\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\n    return new Enumerator_Seq(f);\n}\n\nexport class Enumerator_FromFunctions$1 {\n    constructor(current, next, dispose) {\n        this.current = current;\n        this.next = next;\n        this.dispose = dispose;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        return __.next();\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        return Enumerator_noReset();\n    }\n    Dispose() {\n        const __ = this;\n        __.dispose();\n    }\n}\n\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\n}\n\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\n    return new Enumerator_FromFunctions$1(current, next, dispose);\n}\n\nexport function Enumerator_cast(e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        if (isDisposable(e)) {\n            e.Dispose();\n        }\n    });\n}\n\nexport function Enumerator_concat(sources) {\n    let outerOpt = void 0;\n    let innerOpt = void 0;\n    let started = false;\n    let finished = false;\n    let curr = void 0;\n    const finish = () => {\n        finished = true;\n        if (innerOpt != null) {\n            const inner = innerOpt;\n            try {\n                inner.Dispose();\n            }\n            finally {\n                innerOpt = (void 0);\n            }\n        }\n        if (outerOpt != null) {\n            const outer = outerOpt;\n            try {\n                outer.Dispose();\n            }\n            finally {\n                outerOpt = (void 0);\n            }\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        else if (finished) {\n            Enumerator_alreadyFinished();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        let copyOfStruct;\n        if (!started) {\n            started = true;\n        }\n        if (finished) {\n            return false;\n        }\n        else {\n            let res = void 0;\n            while (res == null) {\n                const matchValue = [outerOpt, innerOpt];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const inner_1 = matchValue[1];\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                            res = true;\n                        }\n                        else {\n                            try {\n                                inner_1.Dispose();\n                            }\n                            finally {\n                                innerOpt = (void 0);\n                            }\n                        }\n                    }\n                    else {\n                        const outer_1 = matchValue[0];\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                            innerOpt = (copyOfStruct = ie, getEnumerator(copyOfStruct));\n                        }\n                        else {\n                            finish();\n                            res = false;\n                        }\n                    }\n                }\n                else {\n                    outerOpt = getEnumerator(sources);\n                }\n            }\n            return value_1(res);\n        }\n    }, () => {\n        if (!finished) {\n            finish();\n        }\n    });\n}\n\nexport function Enumerator_enumerateThenFinally(f, e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        try {\n            e.Dispose();\n        }\n        finally {\n            f();\n        }\n    });\n}\n\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\n    let started = false;\n    let curr = void 0;\n    let state = some(openf());\n    const dispose = () => {\n        if (state != null) {\n            const x_1 = value_1(state);\n            try {\n                closef(x_1);\n            }\n            finally {\n                state = (void 0);\n            }\n        }\n    };\n    const finish = () => {\n        try {\n            dispose();\n        }\n        finally {\n            curr = (void 0);\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        if (!started) {\n            started = true;\n        }\n        if (state != null) {\n            const s = value_1(state);\n            let matchValue_1;\n            try {\n                matchValue_1 = compute(s);\n            }\n            catch (matchValue) {\n                finish();\n                throw matchValue;\n            }\n            if (matchValue_1 != null) {\n                curr = matchValue_1;\n                return true;\n            }\n            else {\n                finish();\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }, dispose);\n}\n\nexport function Enumerator_unfold(f, state) {\n    let curr = void 0;\n    let acc = state;\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (curr != null) {\n            const st = curr[1];\n            return curr[0];\n        }\n        else {\n            return Enumerator_notStarted();\n        }\n    }, () => {\n        curr = f(acc);\n        if (curr != null) {\n            const x_1 = curr[0];\n            const st_1 = curr[1];\n            acc = st_1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, () => {\n    });\n}\n\nexport function indexNotFound() {\n    throw (new Error(SR_keyNotFoundAlt));\n}\n\nexport function checkNonNull(argName, arg) {\n    if (arg == null) {\n        Operators_NullArg(argName);\n    }\n}\n\nexport function mkSeq(f) {\n    return Enumerator_Seq_$ctor_673A07F2(f);\n}\n\nexport function ofSeq(xs) {\n    checkNonNull(\"source\", xs);\n    return getEnumerator(xs);\n}\n\nexport function delay(generator) {\n    return mkSeq(() => getEnumerator(generator()));\n}\n\nexport function concat(sources) {\n    return mkSeq(() => Enumerator_concat(sources));\n}\n\nexport function unfold(generator, state) {\n    return mkSeq(() => Enumerator_unfold(generator, state));\n}\n\nexport function empty() {\n    return delay(() => (new Array(0)));\n}\n\nexport function singleton(x) {\n    return delay(() => singleton_1(x));\n}\n\nexport function ofArray(arr) {\n    return arr;\n}\n\nexport function toArray(xs) {\n    if (isArrayLike(xs)) {\n        return xs;\n    }\n    else if (xs instanceof FSharpList) {\n        return toArray_1(xs);\n    }\n    else {\n        return Array.from(xs);\n    }\n}\n\nexport function ofList(xs) {\n    return xs;\n}\n\nexport function toList(xs) {\n    if (isArrayLike(xs)) {\n        return ofArray_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        return ofSeq_1(xs);\n    }\n}\n\nexport function generate(create, compute, dispose) {\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\n}\n\nexport function generateIndexed(create, compute, dispose) {\n    return mkSeq(() => {\n        let i = -1;\n        return Enumerator_generateWhileSome(create, (x) => {\n            i = ((i + 1) | 0);\n            return compute(i, x);\n        }, dispose);\n    });\n}\n\nexport function append(xs, ys) {\n    return concat([xs, ys]);\n}\n\nexport function cast(xs) {\n    return mkSeq(() => {\n        checkNonNull(\"source\", xs);\n        return Enumerator_cast(getEnumerator(xs));\n    });\n}\n\nexport function choose(chooser, xs) {\n    return generate(() => ofSeq(xs), (e) => {\n        let curr = void 0;\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return curr;\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let c = 0;\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n            while (((c === 0) ? b1 : false) ? b2 : false) {\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\n                if (c === 0) {\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                }\n            }\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function contains(value, xs, comparer) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function enumerateFromFunctions(create, moveNext, current) {\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\n        const matchValue = x_1;\n        if (isDisposable(matchValue)) {\n            matchValue.Dispose();\n        }\n    });\n}\n\nexport function enumerateThenFinally(source, compensation) {\n    const compensation_1 = compensation;\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\n        }\n        catch (matchValue) {\n            compensation_1();\n            throw matchValue;\n        }\n    });\n}\n\nexport function enumerateUsing(resource, source) {\n    const compensation = () => {\n        if (equals(resource, null)) {\n        }\n        else {\n            let copyOfStruct = resource;\n            copyOfStruct.Dispose();\n        }\n    };\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\n        }\n        catch (matchValue_1) {\n            compensation();\n            throw matchValue_1;\n        }\n    });\n}\n\nexport function enumerateWhile(guard, xs) {\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\n}\n\nexport function filter(f, xs) {\n    return choose((x) => {\n        if (f(x)) {\n            return some(x);\n        }\n        else {\n            return void 0;\n        }\n    }, xs);\n}\n\nexport function exists(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function exists2(predicate, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let found = false;\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return found;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function exactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\n            }\n            else {\n                return v;\n            }\n        }\n        else {\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\n        }\n        else {\n            return void 0;\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryFind(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (predicate(c)) {\n                res = some(c);\n            }\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function find(predicate, xs) {\n    const matchValue = tryFind(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(predicate, xs) {\n    return tryFindBack_1(predicate, toArray(xs));\n}\n\nexport function findBack(predicate, xs) {\n    const matchValue = tryFindBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (i_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\n                        return i;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        continue loop;\n                    }\n                }\n                else {\n                    return void 0;\n                }\n                break;\n            }\n        };\n        return loop(0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function findIndex(predicate, xs) {\n    const matchValue = tryFindIndex(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(predicate, xs) {\n    return tryFindIndexBack_1(predicate, toArray(xs));\n}\n\nexport function findIndexBack(predicate, xs) {\n    const matchValue = tryFindIndexBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function fold(folder, state, xs) {\n    const e = ofSeq(xs);\n    try {\n        let acc = state;\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return acc;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let acc = state;\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return acc;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function forAll(predicate, xs) {\n    return !exists((x) => (!predicate(x)), xs);\n}\n\nexport function forAll2(predicate, xs, ys) {\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\n}\n\nexport function tryHead(xs) {\n    if (isArrayLike(xs)) {\n        return tryHead_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryHead_2(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function head(xs) {\n    const matchValue = tryHead(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function initialize(count, f) {\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\n}\n\nexport function initializeInfinite(f) {\n    return initialize(2147483647, f);\n}\n\nexport function isEmpty(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length === 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return isEmpty_1(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function tryItem(index, xs) {\n    if (isArrayLike(xs)) {\n        return tryItem_1(index, xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryItem_2(index, xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            const loop = (index_1_mut) => {\n                loop:\n                while (true) {\n                    const index_1 = index_1_mut;\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                        return void 0;\n                    }\n                    else if (index_1 === 0) {\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    }\n                    else {\n                        index_1_mut = (index_1 - 1);\n                        continue loop;\n                    }\n                    break;\n                }\n            };\n            return loop(index);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function item(index, xs) {\n    const matchValue = tryItem(index, xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function tryLast(xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    return acc;\n                }\n                else {\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    continue loop;\n                }\n                break;\n            }\n        };\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function length(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length | 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return length_1(xs) | 0;\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            let count = 0;\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                count = ((count + 1) | 0);\n            }\n            return count | 0;\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function map(mapping, xs) {\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function mapIndexed(mapping, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        const e3 = tupledArg[2];\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            try {\n                tupledArg_1[1].Dispose();\n            }\n            finally {\n                tupledArg_1[2].Dispose();\n            }\n        }\n    });\n}\n\nexport function readOnly(xs) {\n    checkNonNull(\"source\", xs);\n    return map((x) => x, xs);\n}\n\nexport function cache(xs) {\n    let cached = false;\n    const xsCache = [];\n    return delay(() => {\n        if (!cached) {\n            cached = true;\n            return map((x) => {\n                void (xsCache.push(x));\n                return x;\n            }, xs);\n        }\n        else {\n            return xsCache;\n        }\n    });\n}\n\nexport function allPairs(xs, ys) {\n    const ysCache = cache(ys);\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\n}\n\nexport function mapFold(mapping, state, xs) {\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function tryPick(chooser, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function pick(chooser, xs) {\n    const matchValue = tryPick(chooser, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function reduce(folder, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    continue loop;\n                }\n                else {\n                    return acc;\n                }\n                break;\n            }\n        };\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        else {\n            throw (new Error(SR_inputSequenceEmpty));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function reduceBack(folder, xs) {\n    const arr = toArray(xs);\n    if (arr.length > 0) {\n        return arr.reduceRight(folder);\n    }\n    else {\n        throw (new Error(SR_inputSequenceEmpty));\n    }\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reverse(xs) {\n    return delay(() => ofArray(reverse_1(toArray(xs))));\n}\n\nexport function scan(folder, state, xs) {\n    return delay(() => {\n        let acc = state;\n        return concat([singleton(state), map((x) => {\n            acc = folder(acc, x);\n            return acc;\n        }, xs)]);\n    });\n}\n\nexport function scanBack(folder, xs, state) {\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\n}\n\nexport function skip(count, xs) {\n    return mkSeq(() => {\n        const e = ofSeq(xs);\n        try {\n            for (let i = 1; i <= count; i++) {\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n                }\n            }\n            return Enumerator_enumerateThenFinally(() => {\n            }, e);\n        }\n        catch (matchValue) {\n            e.Dispose();\n            throw matchValue;\n        }\n    });\n}\n\nexport function skipWhile(predicate, xs) {\n    return delay(() => {\n        let skipped = true;\n        return filter((x) => {\n            if (skipped) {\n                skipped = predicate(x);\n            }\n            return !skipped;\n        }, xs);\n    });\n}\n\nexport function tail(xs) {\n    return skip(1, xs);\n}\n\nexport function take(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\n        if (i < count) {\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            else {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n            }\n        }\n        else {\n            return void 0;\n        }\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function takeWhile(predicate, xs) {\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function truncate(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function collect(mapping, xs) {\n    return delay(() => concat(map(mapping, xs)));\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\n}\n\nexport function windowed(windowSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\n}\n\nexport function transpose(xss) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\n}\n\nexport function sortWith(comparer, xs) {\n    return delay(() => {\n        const arr = toArray(xs);\n        arr.sort(comparer);\n        return ofArray(arr);\n    });\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { singleton, ofArrayWithTail, head, tail, isEmpty as isEmpty_1, FSharpList, fold as fold_1, empty as empty_1, cons } from \"./List.js\";\nimport { fill } from \"./Array.js\";\nimport { structuralHash, compare, toIterator, equals, getEnumerator, isArrayLike } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, map as map_1, unfold } from \"./Seq.js\";\nimport { format, join } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = (h | 0);\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(MapTreeNode$2__get_Left(matchValue));\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(MapTreeNode$2__get_Right(matchValue_2));\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n        }\n        else if (c === 0) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n        }\n    }\n    else {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (MapTreeNode$2__get_Left(m2) == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                }\n                else if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_2), MapTreeModule_empty(), m, 2);\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue_3));\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_1(matchValue_4), m, MapTreeModule_empty(), 2);\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_1(matchValue));\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                f_mut = f;\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\n        foldFromTo:\n        while (true) {\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                    if (cKeyHi < 0) {\n                        f_1_mut = f_1;\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\n                        x_1_mut = x_3;\n                        continue foldFromTo;\n                    }\n                    else {\n                        return x_3;\n                    }\n                }\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                }\n                else {\n                    return x_1;\n                }\n            }\n            else {\n                return x_1;\n            }\n            break;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc));\n                    continue loop;\n                }\n                else {\n                    return cons([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, empty_1());\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = ((j + 1) | 0);\n    }, m);\n}\n\nexport function MapTreeModule_toArray(m) {\n    const n = MapTreeModule_size(m) | 0;\n    const res = fill(new Array(n), 0, n, [null, null]);\n    MapTreeModule_copyToArray(m, res, 0);\n    return res;\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof FSharpList) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (!isEmpty_1(stack)) {\n            const rest = tail(stack);\n            const m = head(stack);\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = ofArrayWithTail([MapTreeNode$2__get_Left(m2), MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), MapTreeNode$2__get_Right(m2)], rest);\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return empty_1();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(singleton(m)), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const m = head(matchValue);\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (!isEmpty_1(matchValue)) {\n            if (head(matchValue) != null) {\n                const m = head(matchValue);\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(tail(matchValue));\n                    return !isEmpty_1(i.stack);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !isEmpty_1(i.stack);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, MapTreeModule_mkIEnumerator(s));\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        return (\"map [\" + join(\"; \", map_1((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_1((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_1((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_1((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            f(p[1], p[0], m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_1(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const activePatternResult5203 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = (combineHash(res, structuralHash(activePatternResult5203[0])) | 0);\n            res = (combineHash(res, structuralHash(activePatternResult5203[1])) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_1((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","import { toFail, printf, toText, join } from \"../fable-library.3.1.11/String.js\";\nimport { Result_Map, FSharpResult$2 } from \"../fable-library.3.1.11/Choice.js\";\nimport { Util_CachedDecoders, Util_Cache$1__GetOrAdd_43981464, CaseStrategy, Util_Casing_convert, ErrorReason } from \"./Types.fs.js\";\nimport { tryParse as tryParse_2 } from \"../fable-library.3.1.11/Guid.js\";\nimport { toString as toString_12, FSharpRef } from \"../fable-library.3.1.11/Types.js\";\nimport { tryParse as tryParse_3 } from \"../fable-library.3.1.11/Int32.js\";\nimport { tryParse as tryParse_4, fromInt, fromNumber, fromBits, toNumber } from \"../fable-library.3.1.11/Long.js\";\nimport { parse, fromInt32 } from \"../fable-library.3.1.11/BigInt.js\";\nimport { tryParse as tryParse_5 } from \"../fable-library.3.1.11/Decimal.js\";\nimport Decimal from \"../fable-library.3.1.11/Decimal.js\";\nimport { toUniversalTime, tryParse as tryParse_6, minValue } from \"../fable-library.3.1.11/Date.js\";\nimport { tryParse as tryParse_7, minValue as minValue_1 } from \"../fable-library.3.1.11/DateOffset.js\";\nimport { tryParse as tryParse_8 } from \"../fable-library.3.1.11/TimeSpan.js\";\nimport { map as map_4, defaultArg, some } from \"../fable-library.3.1.11/Option.js\";\nimport { ofArray, toArray, map as map_1, length, singleton, append as append_1, tail as tail_1, head as head_1, isEmpty, ofSeq, empty, reverse, fold, tryLast, cons } from \"../fable-library.3.1.11/List.js\";\nimport { int16ToString, numberHash, mapCurriedArgs, compare, int32ToString, uncurry } from \"../fable-library.3.1.11/Util.js\";\nimport { map as map_2, tryFind, foldBack2, foldBack, fill, fold as fold_1 } from \"../fable-library.3.1.11/Array.js\";\nimport { contains, fold as fold_2, toList, append, reverse as reverse_1 } from \"../fable-library.3.1.11/Seq.js\";\nimport { empty as empty_1, map as map_3, tryFind as tryFind_1, add, ofSeq as ofSeq_1, ofList } from \"../fable-library.3.1.11/Map.js\";\nimport { getGenerics, getGenericTypeDefinition, makeTuple, getTupleElements, isTuple, isGenericType, parseEnum, getEnumValues, getEnumUnderlyingType, isEnum, getElementType, isArray, isUnion, makeRecord, getRecordElements, isRecord, fullName, getUnionCaseFields, makeUnion as makeUnion_1, getUnionCases, name as name_3, class_type } from \"../fable-library.3.1.11/Reflection.js\";\nimport { ofSeq as ofSeq_2 } from \"../fable-library.3.1.11/Set.js\";\n\nexport function Helpers_isUndefined(o) {\n    return (typeof o) === \"undefined\";\n}\n\nfunction genericMsg(msg, value_1, newLine) {\n    try {\n        return (((\"Expecting \" + msg) + \" but instead got:\") + (newLine ? \"\\n\" : \" \")) + (JSON.stringify(value_1, null, 4) + '');\n    }\n    catch (matchValue) {\n        return ((\"Expecting \" + msg) + \" but decoder failed. Couldn\\u0027t report given value due to circular structure.\") + (newLine ? \"\\n\" : \" \");\n    }\n}\n\nfunction errorToString(path, error) {\n    const reason_1 = (error.tag === 2) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 1) ? ((genericMsg(error.fields[0], error.fields[1], false) + \"\\nReason: \") + error.fields[2]) : ((error.tag === 3) ? genericMsg(error.fields[0], error.fields[1], true) : ((error.tag === 4) ? (genericMsg(error.fields[0], error.fields[1], true) + ((\"\\nNode `\" + error.fields[2]) + \"` is unkown.\")) : ((error.tag === 5) ? (((\"Expecting \" + error.fields[0]) + \".\\n\") + (JSON.stringify(error.fields[1], null, 4) + '')) : ((error.tag === 7) ? (\"The following errors were found:\\n\\n\" + join(\"\\n\\n\", error.fields[0])) : ((error.tag === 6) ? (\"The following `failure` occurred with the decoder: \" + error.fields[0]) : genericMsg(error.fields[0], error.fields[1], false)))))));\n    if (error.tag === 7) {\n        return reason_1;\n    }\n    else {\n        return ((\"Error at: `\" + path) + \"`\\n\") + reason_1;\n    }\n}\n\nexport function fromValue(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        const error = matchValue.fields[0];\n        return new FSharpResult$2(1, errorToString(error[0], error[1]));\n    }\n    else {\n        return new FSharpResult$2(0, matchValue.fields[0]);\n    }\n}\n\nexport function fromString(decoder, value_1) {\n    try {\n        return fromValue(\"$\", decoder, JSON.parse(value_1));\n    }\n    catch (matchValue) {\n        if (matchValue instanceof SyntaxError) {\n            return new FSharpResult$2(1, \"Given an invalid JSON: \" + matchValue.message);\n        }\n        else {\n            throw matchValue;\n        }\n    }\n}\n\nexport function unsafeFromString(decoder, value_1) {\n    const matchValue = fromString(decoder, value_1);\n    if (matchValue.tag === 1) {\n        throw (new Error(matchValue.fields[0]));\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport function decodeValue(path, decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromValue(path, decoder_1, value_1);\n}\n\nexport function decodeString(decoder) {\n    const decoder_1 = decoder;\n    return (value_1) => fromString(decoder_1, value_1);\n}\n\nexport function string(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a string\", value_1)]);\n    }\n}\n\nexport function guid(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = \"00000000-0000-0000-0000-000000000000\";\n        matchValue = [tryParse_2(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a guid\", value_1)]);\n    }\n}\n\nexport function unit(path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport const sbyte = (path) => ((value_2) => {\n    const name_1 = \"a sbyte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-128 <= value_4) ? (value_4 <= 127) : false) ? (new FSharpResult$2(0, (value_4 + 0x80 & 0xFF) - 0x80)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const byte = (path) => ((value_2) => {\n    const name_1 = \"a byte\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 255) : false) ? (new FSharpResult$2(0, value_4 & 0xFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 8, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int16 = (path) => ((value_2) => {\n    const name_1 = \"an int16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-32768 <= value_4) ? (value_4 <= 32767) : false) ? (new FSharpResult$2(0, (value_4 + 0x8000 & 0xFFFF) - 0x8000)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint16 = (path) => ((value_2) => {\n    const name_1 = \"an uint16\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 65535) : false) ? (new FSharpResult$2(0, value_4 & 0xFFFF)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 16, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int = (path) => ((value_2) => {\n    const name_1 = \"an int\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((-2147483648 <= value_4) ? (value_4 <= 2147483647) : false) ? (new FSharpResult$2(0, ~(~value_4))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint32 = (path) => ((value_2) => {\n    const name_1 = \"an uint32\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((0 <= value_4) ? (value_4 <= 4294967295) : false) ? (new FSharpResult$2(0, value_4 >>> 0)) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_3(value_3, 511, true, 32, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const int64 = (path) => ((value_2) => {\n    const name_1 = \"an int64\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(fromBits(0, 2147483648, false)) <= value_4) ? (value_4 <= toNumber(fromBits(4294967295, 2147483647, false))) : false) ? (new FSharpResult$2(0, fromNumber(value_4, false))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = fromInt(0);\n        matchValue = [tryParse_4(value_3, 511, false, 64, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport const uint64 = (path) => ((value_2) => {\n    const name_1 = \"an uint64\";\n    const path_1 = path;\n    const value_3 = value_2;\n    if ((typeof value_3) === \"number\") {\n        const value_4 = value_3;\n        return (isFinite(value_4) && Math.floor(value_4) === value_4) ? (((toNumber(fromBits(0, 0, true)) <= value_4) ? (value_4 <= toNumber(fromBits(4294967295, 4294967295, true))) : false) ? (new FSharpResult$2(0, fromNumber(value_4, true))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value was either too large or too small for \" + name_1)]))) : (new FSharpResult$2(1, [path_1, new ErrorReason(1, name_1, value_4, \"Value is not an integral value\")]));\n    }\n    else if ((typeof value_3) === \"string\") {\n        let matchValue;\n        let outArg = fromInt(0);\n        matchValue = [tryParse_4(value_3, 511, true, 64, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        return matchValue[0] ? (new FSharpResult$2(0, matchValue[1])) : (new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]));\n    }\n    else {\n        return new FSharpResult$2(1, [path_1, new ErrorReason(0, name_1, value_3)]);\n    }\n});\n\nexport function bigint(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, fromInt32(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        try {\n            return new FSharpResult$2(0, parse(value_1));\n        }\n        catch (matchValue) {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a bigint\", value_1)]);\n    }\n}\n\nexport function bool(path, value_1) {\n    if ((typeof value_1) === \"boolean\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a boolean\", value_1)]);\n    }\n}\n\nexport function float(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float\", value_1)]);\n    }\n}\n\nexport function float32(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a float32\", value_1)]);\n    }\n}\n\nexport function decimal(path, value_1) {\n    if ((typeof value_1) === \"number\") {\n        return new FSharpResult$2(0, new Decimal(value_1));\n    }\n    else if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = new Decimal(0);\n        matchValue = [tryParse_5(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a decimal\", value_1)]);\n    }\n}\n\nexport function datetime(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue();\n        matchValue = [tryParse_6(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, toUniversalTime(matchValue[1]));\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function datetimeOffset(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = minValue_1();\n        matchValue = [tryParse_7(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetimeoffset\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a datetime\", value_1)]);\n    }\n}\n\nexport function timespan(path, value_1) {\n    if ((typeof value_1) === \"string\") {\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryParse_8(value_1, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            return new FSharpResult$2(0, matchValue[1]);\n        }\n        else {\n            return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a timespan\", value_1)]);\n    }\n}\n\nfunction decodeMaybeNull(path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        if (value_1 == null) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else if (matchValue.tag === 1) {\n            return new FSharpResult$2(1, matchValue.fields[0]);\n        }\n        else {\n            throw (new Error(\"Match failure\"));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, some(matchValue.fields[0]));\n    }\n}\n\nexport function optional(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull((path + \".\") + fieldName, decoder, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nfunction badPathError(fieldNames, currentPath, value_1) {\n    return new FSharpResult$2(1, [defaultArg(currentPath, join(\".\", cons(\"$\", fieldNames))), new ErrorReason(4, (\"an object with path `\" + join(\".\", fieldNames)) + \"`\", value_1, defaultArg(tryLast(fieldNames), \"\"))]);\n}\n\nexport function optionalAt(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => ((res == null) ? ((curValue == null) ? [curPath, curValue, new FSharpResult$2(0, void 0)] : ((curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) ? [(curPath + \".\") + field_1, curValue[field_1], void 0] : [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])])) : [curPath, curValue, res]);\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        const lastValue = _arg1[1];\n        if (Helpers_isUndefined(lastValue)) {\n            return new FSharpResult$2(0, void 0);\n        }\n        else {\n            return decodeMaybeNull(_arg1[0], decoder, lastValue);\n        }\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function field(fieldName, decoder, path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        const fieldValue = value_1[fieldName];\n        if (Helpers_isUndefined(fieldValue)) {\n            return new FSharpResult$2(1, [path, new ErrorReason(3, (\"an object with a field named `\" + fieldName) + \"`\", value_1)]);\n        }\n        else {\n            return decoder((path + \".\") + fieldName, fieldValue);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(2, \"an object\", value_1)]);\n    }\n}\n\nexport function at(fieldNames, decoder, firstPath, firstValue) {\n    const _arg1 = fold(uncurry(2, (tupledArg) => {\n        const curPath = tupledArg[0];\n        const curValue = tupledArg[1];\n        const res = tupledArg[2];\n        return (field_1) => {\n            if (res == null) {\n                if (curValue == null) {\n                    return [curPath, curValue, badPathError(fieldNames, curPath, firstValue)];\n                }\n                else if (curValue === null ? false : (Object.getPrototypeOf(curValue || false) === Object.prototype)) {\n                    const curValue_1 = curValue[field_1];\n                    return Helpers_isUndefined(curValue_1) ? [curPath, curValue_1, badPathError(fieldNames, void 0, firstValue)] : [(curPath + \".\") + field_1, curValue_1, void 0];\n                }\n                else {\n                    return [curPath, curValue, new FSharpResult$2(1, [curPath, new ErrorReason(2, \"an object\", curValue)])];\n                }\n            }\n            else {\n                return [curPath, curValue, res];\n            }\n        };\n    }), [firstPath, firstValue, void 0], fieldNames);\n    if (_arg1[2] == null) {\n        return decoder(_arg1[0], _arg1[1]);\n    }\n    else {\n        return _arg1[2];\n    }\n}\n\nexport function index(requestedIndex, decoder, path, value_1) {\n    let copyOfStruct;\n    const currentPath = ((path + \".[\") + int32ToString(requestedIndex)) + \"]\";\n    if (Array.isArray(value_1)) {\n        const vArray = value_1;\n        if (requestedIndex < vArray.length) {\n            return decoder(currentPath, vArray[requestedIndex]);\n        }\n        else {\n            return new FSharpResult$2(1, [currentPath, new ErrorReason(5, (((\"a longer array. Need index `\" + int32ToString(requestedIndex)) + \"` but there are only `\") + (copyOfStruct = (vArray.length | 0), int32ToString(copyOfStruct))) + \"` entries\", value_1)]);\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [currentPath, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function option(decoder, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, void 0);\n    }\n    else {\n        return Result_Map((arg0) => some(arg0), decoder(path, value_1));\n    }\n}\n\nexport function list(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((list_1) => reverse(list_1), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, cons(matchValue.fields[0], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a list\", value_1)]);\n    }\n}\n\nexport function seq(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        return Result_Map((source) => reverse_1(source), fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    return new FSharpResult$2(0, append([matchValue.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, []), value_1));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"a seq\", value_1)]);\n    }\n}\n\nexport function array(decoder, path, value_1) {\n    if (Array.isArray(value_1)) {\n        let i = -1;\n        const tokens = value_1;\n        return fold_1((acc, value_2) => {\n            i = ((i + 1) | 0);\n            if (acc.tag === 0) {\n                const acc_1 = acc.fields[0];\n                const matchValue = decoder(((path + \".[\") + int32ToString(i)) + \"]\", value_2);\n                if (matchValue.tag === 0) {\n                    acc_1[i] = matchValue.fields[0];\n                    return new FSharpResult$2(0, acc_1);\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, fill(new Array(tokens.length), 0, tokens.length, null)), tokens);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an array\", value_1)]);\n    }\n}\n\nexport function keys(path, value_1) {\n    if (value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype)) {\n        return new FSharpResult$2(0, ofSeq(Object.keys(value_1)));\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n}\n\nexport function keyValuePairs(decoder, path, value_1) {\n    const matchValue = keys(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return Result_Map((list_2) => reverse(list_2), fold((acc, prop) => {\n            if (acc.tag === 0) {\n                const matchValue_1 = decoder(path, value_1[prop]);\n                if (matchValue_1.tag === 0) {\n                    return new FSharpResult$2(0, cons([prop, matchValue_1.fields[0]], acc.fields[0]));\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue_1.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), matchValue.fields[0]));\n    }\n}\n\nexport function oneOf(decoders, path, value_1) {\n    const runner = (decoders_1_mut, errors_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, errors = errors_mut;\n            if (isEmpty(decoders_1)) {\n                return new FSharpResult$2(1, [path, new ErrorReason(7, errors)]);\n            }\n            else {\n                const matchValue = fromValue(path, uncurry(2, head_1(decoders_1)), value_1);\n                if (matchValue.tag === 1) {\n                    decoders_1_mut = tail_1(decoders_1);\n                    errors_mut = append_1(errors, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n                else {\n                    return new FSharpResult$2(0, matchValue.fields[0]);\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function nil(output, path, value_1) {\n    if (value_1 == null) {\n        return new FSharpResult$2(0, output);\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"null\", value_1)]);\n    }\n}\n\nexport function value(_arg1, v) {\n    return new FSharpResult$2(0, v);\n}\n\nexport function succeed(output, _arg2, _arg1) {\n    return new FSharpResult$2(0, output);\n}\n\nexport function fail(msg, path, _arg1) {\n    return new FSharpResult$2(1, [path, new ErrorReason(6, msg)]);\n}\n\nexport function andThen(cb, decoder, path, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 0) {\n        return cb(matchValue.fields[0], path, value_1);\n    }\n    else {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n}\n\nexport function all(decoders, path, value_1) {\n    const runner = (decoders_1_mut, values_mut) => {\n        runner:\n        while (true) {\n            const decoders_1 = decoders_1_mut, values = values_mut;\n            if (isEmpty(decoders_1)) {\n                return new FSharpResult$2(0, values);\n            }\n            else {\n                const matchValue = head_1(decoders_1)(path)(value_1);\n                if (matchValue.tag === 1) {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n                else {\n                    decoders_1_mut = tail_1(decoders_1);\n                    values_mut = append_1(values, singleton(matchValue.fields[0]));\n                    continue runner;\n                }\n            }\n            break;\n        }\n    };\n    return runner(decoders, empty());\n}\n\nexport function map(ctor, d1, path, value_1) {\n    const matchValue = d1(path, value_1);\n    if (matchValue.tag === 1) {\n        return new FSharpResult$2(1, matchValue.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(0, ctor(matchValue.fields[0]));\n    }\n}\n\nexport function map2(ctor, d1, d2, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0]));\n        }\n    }\n}\n\nexport function map3(ctor, d1, d2, d3, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0]));\n            }\n        }\n    }\n}\n\nexport function map4(ctor, d1, d2, d3, d4, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0]));\n                }\n            }\n        }\n    }\n}\n\nexport function map5(ctor, d1, d2, d3, d4, d5, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0]));\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map6(ctor, d1, d2, d3, d4, d5, d6, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0]));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map7(ctor, d1, d2, d3, d4, d5, d6, d7, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0]));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function map8(ctor, d1, d2, d3, d4, d5, d6, d7, d8, path, value_1) {\n    const matchValue = [d1(path, value_1), d2(path, value_1), d3(path, value_1), d4(path, value_1), d5(path, value_1), d6(path, value_1), d7(path, value_1), d8(path, value_1)];\n    const copyOfStruct = matchValue[0];\n    if (copyOfStruct.tag === 1) {\n        return new FSharpResult$2(1, copyOfStruct.fields[0]);\n    }\n    else {\n        const copyOfStruct_1 = matchValue[1];\n        if (copyOfStruct_1.tag === 1) {\n            return new FSharpResult$2(1, copyOfStruct_1.fields[0]);\n        }\n        else {\n            const copyOfStruct_2 = matchValue[2];\n            if (copyOfStruct_2.tag === 1) {\n                return new FSharpResult$2(1, copyOfStruct_2.fields[0]);\n            }\n            else {\n                const copyOfStruct_3 = matchValue[3];\n                if (copyOfStruct_3.tag === 1) {\n                    return new FSharpResult$2(1, copyOfStruct_3.fields[0]);\n                }\n                else {\n                    const copyOfStruct_4 = matchValue[4];\n                    if (copyOfStruct_4.tag === 1) {\n                        return new FSharpResult$2(1, copyOfStruct_4.fields[0]);\n                    }\n                    else {\n                        const copyOfStruct_5 = matchValue[5];\n                        if (copyOfStruct_5.tag === 1) {\n                            return new FSharpResult$2(1, copyOfStruct_5.fields[0]);\n                        }\n                        else {\n                            const copyOfStruct_6 = matchValue[6];\n                            if (copyOfStruct_6.tag === 1) {\n                                return new FSharpResult$2(1, copyOfStruct_6.fields[0]);\n                            }\n                            else {\n                                const copyOfStruct_7 = matchValue[7];\n                                if (copyOfStruct_7.tag === 1) {\n                                    return new FSharpResult$2(1, copyOfStruct_7.fields[0]);\n                                }\n                                else {\n                                    return new FSharpResult$2(0, ctor(copyOfStruct.fields[0], copyOfStruct_1.fields[0], copyOfStruct_2.fields[0], copyOfStruct_3.fields[0], copyOfStruct_4.fields[0], copyOfStruct_5.fields[0], copyOfStruct_6.fields[0], copyOfStruct_7.fields[0]));\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport function dict(decoder) {\n    let d1;\n    const decoder_1 = decoder;\n    d1 = ((path) => ((value_1) => keyValuePairs(decoder_1, path, value_1)));\n    return (path_1) => ((value_2) => map((elements) => ofList(elements), uncurry(2, d1), path_1, value_2));\n}\n\nfunction unwrapWith(errors, path, decoder, value_1) {\n    const matchValue = decoder(path, value_1);\n    if (matchValue.tag === 1) {\n        void (errors.push(matchValue.fields[0]));\n        return null;\n    }\n    else {\n        return matchValue.fields[0];\n    }\n}\n\nexport class Getters$1 {\n    constructor(path, v) {\n        let _this, _this_1;\n        this.errors = [];\n        this.required = (_this = this, {\n            Field(fieldName, decoder) {\n                return unwrapWith(_this.errors, path, (path_1, value_1) => field(fieldName, decoder, path_1, value_1), v);\n            },\n            At(fieldNames, decoder_2) {\n                return unwrapWith(_this.errors, path, (firstPath, firstValue) => at(fieldNames, decoder_2, firstPath, firstValue), v);\n            },\n            Raw(decoder_4) {\n                return unwrapWith(_this.errors, path, decoder_4, v);\n            },\n        });\n        this.optional = (_this_1 = this, {\n            Field(fieldName_1, decoder_5) {\n                return unwrapWith(_this_1.errors, path, (path_2, value_2) => optional(fieldName_1, decoder_5, path_2, value_2), v);\n            },\n            At(fieldNames_1, decoder_7) {\n                return unwrapWith(_this_1.errors, path, (firstPath_1, firstValue_1) => optionalAt(fieldNames_1, decoder_7, firstPath_1, firstValue_1), v);\n            },\n            Raw(decoder_9) {\n                const matchValue = decoder_9(path, v);\n                if (matchValue.tag === 1) {\n                    const reason = matchValue.fields[0][1];\n                    const error = matchValue.fields[0];\n                    let pattern_matching_result, v_2;\n                    switch (reason.tag) {\n                        case 1: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 2: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                            break;\n                        }\n                        case 3:\n                        case 4: {\n                            pattern_matching_result = 1;\n                            break;\n                        }\n                        case 5:\n                        case 6:\n                        case 7: {\n                            pattern_matching_result = 2;\n                            break;\n                        }\n                        default: {\n                            pattern_matching_result = 0;\n                            v_2 = reason.fields[1];\n                        }\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            if (v_2 == null) {\n                                return void 0;\n                            }\n                            else {\n                                void (_this_1.errors.push(error));\n                                return null;\n                            }\n                        }\n                        case 1: {\n                            return void 0;\n                        }\n                        case 2: {\n                            void (_this_1.errors.push(error));\n                            return null;\n                        }\n                    }\n                }\n                else {\n                    return some(matchValue.fields[0]);\n                }\n            },\n        });\n    }\n    get Required() {\n        const __ = this;\n        return __.required;\n    }\n    get Optional() {\n        const __ = this;\n        return __.optional;\n    }\n}\n\nexport function Getters$1$reflection(gen0) {\n    return class_type(\"Thoth.Json.Decode.Getters`1\", [gen0], Getters$1);\n}\n\nexport function Getters$1_$ctor_4A51B60E(path, v) {\n    return new Getters$1(path, v);\n}\n\nexport function Getters$1__get_Errors(__) {\n    return toList(__.errors);\n}\n\nexport function object(builder, path, v) {\n    const getters = Getters$1_$ctor_4A51B60E(path, v);\n    const result = builder(getters);\n    const matchValue = Getters$1__get_Errors(getters);\n    if (!isEmpty(matchValue)) {\n        const errors = matchValue;\n        if (length(errors) > 1) {\n            return new FSharpResult$2(1, [path, new ErrorReason(7, map_1((tupledArg) => errorToString(tupledArg[0], tupledArg[1]), errors))]);\n        }\n        else {\n            return new FSharpResult$2(1, head_1(matchValue));\n        }\n    }\n    else {\n        return new FSharpResult$2(0, result);\n    }\n}\n\nexport function tuple2(decoder1, decoder2) {\n    let decoder_3;\n    const decoder = decoder1;\n    decoder_3 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_3) => ((value_4) => andThen(uncurry(3, (v1) => {\n        let decoder_2;\n        const decoder_1 = decoder2;\n        decoder_2 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_2) => ((value_3) => andThen((v2, arg10$0040, arg20$0040) => succeed([v1, v2], arg10$0040, arg20$0040), uncurry(2, decoder_2), path_2, value_3));\n    }), uncurry(2, decoder_3), path_3, value_4));\n}\n\nexport function tuple3(decoder1, decoder2, decoder3) {\n    let decoder_5;\n    const decoder = decoder1;\n    decoder_5 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_5) => ((value_6) => andThen(uncurry(3, (v1) => {\n        let decoder_4;\n        const decoder_1 = decoder2;\n        decoder_4 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_4) => ((value_5) => andThen(uncurry(3, (v2) => {\n            let decoder_3;\n            const decoder_2 = decoder3;\n            decoder_3 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_3) => ((value_4) => andThen((v3, arg10$0040, arg20$0040) => succeed([v1, v2, v3], arg10$0040, arg20$0040), uncurry(2, decoder_3), path_3, value_4));\n        }), uncurry(2, decoder_4), path_4, value_5));\n    }), uncurry(2, decoder_5), path_5, value_6));\n}\n\nexport function tuple4(decoder1, decoder2, decoder3, decoder4) {\n    let decoder_7;\n    const decoder = decoder1;\n    decoder_7 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_7) => ((value_8) => andThen(uncurry(3, (v1) => {\n        let decoder_6;\n        const decoder_1 = decoder2;\n        decoder_6 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_6) => ((value_7) => andThen(uncurry(3, (v2) => {\n            let decoder_5;\n            const decoder_2 = decoder3;\n            decoder_5 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_5) => ((value_6) => andThen(uncurry(3, (v3) => {\n                let decoder_4;\n                const decoder_3 = decoder4;\n                decoder_4 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_4) => ((value_5) => andThen((v4, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4], arg10$0040, arg20$0040), uncurry(2, decoder_4), path_4, value_5));\n            }), uncurry(2, decoder_5), path_5, value_6));\n        }), uncurry(2, decoder_6), path_6, value_7));\n    }), uncurry(2, decoder_7), path_7, value_8));\n}\n\nexport function tuple5(decoder1, decoder2, decoder3, decoder4, decoder5) {\n    let decoder_9;\n    const decoder = decoder1;\n    decoder_9 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_9) => ((value_10) => andThen(uncurry(3, (v1) => {\n        let decoder_8;\n        const decoder_1 = decoder2;\n        decoder_8 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_8) => ((value_9) => andThen(uncurry(3, (v2) => {\n            let decoder_7;\n            const decoder_2 = decoder3;\n            decoder_7 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_7) => ((value_8) => andThen(uncurry(3, (v3) => {\n                let decoder_6;\n                const decoder_3 = decoder4;\n                decoder_6 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_6) => ((value_7) => andThen(uncurry(3, (v4) => {\n                    let decoder_5;\n                    const decoder_4 = decoder5;\n                    decoder_5 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_5) => ((value_6) => andThen((v5, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5], arg10$0040, arg20$0040), uncurry(2, decoder_5), path_5, value_6));\n                }), uncurry(2, decoder_6), path_6, value_7));\n            }), uncurry(2, decoder_7), path_7, value_8));\n        }), uncurry(2, decoder_8), path_8, value_9));\n    }), uncurry(2, decoder_9), path_9, value_10));\n}\n\nexport function tuple6(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6) {\n    let decoder_11;\n    const decoder = decoder1;\n    decoder_11 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_11) => ((value_12) => andThen(uncurry(3, (v1) => {\n        let decoder_10;\n        const decoder_1 = decoder2;\n        decoder_10 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_10) => ((value_11) => andThen(uncurry(3, (v2) => {\n            let decoder_9;\n            const decoder_2 = decoder3;\n            decoder_9 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_9) => ((value_10) => andThen(uncurry(3, (v3) => {\n                let decoder_8;\n                const decoder_3 = decoder4;\n                decoder_8 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_8) => ((value_9) => andThen(uncurry(3, (v4) => {\n                    let decoder_7;\n                    const decoder_4 = decoder5;\n                    decoder_7 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_7) => ((value_8) => andThen(uncurry(3, (v5) => {\n                        let decoder_6;\n                        const decoder_5 = decoder6;\n                        decoder_6 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_6) => ((value_7) => andThen((v6, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6], arg10$0040, arg20$0040), uncurry(2, decoder_6), path_6, value_7));\n                    }), uncurry(2, decoder_7), path_7, value_8));\n                }), uncurry(2, decoder_8), path_8, value_9));\n            }), uncurry(2, decoder_9), path_9, value_10));\n        }), uncurry(2, decoder_10), path_10, value_11));\n    }), uncurry(2, decoder_11), path_11, value_12));\n}\n\nexport function tuple7(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7) {\n    let decoder_13;\n    const decoder = decoder1;\n    decoder_13 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_13) => ((value_14) => andThen(uncurry(3, (v1) => {\n        let decoder_12;\n        const decoder_1 = decoder2;\n        decoder_12 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_12) => ((value_13) => andThen(uncurry(3, (v2) => {\n            let decoder_11;\n            const decoder_2 = decoder3;\n            decoder_11 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_11) => ((value_12) => andThen(uncurry(3, (v3) => {\n                let decoder_10;\n                const decoder_3 = decoder4;\n                decoder_10 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_10) => ((value_11) => andThen(uncurry(3, (v4) => {\n                    let decoder_9;\n                    const decoder_4 = decoder5;\n                    decoder_9 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_9) => ((value_10) => andThen(uncurry(3, (v5) => {\n                        let decoder_8;\n                        const decoder_5 = decoder6;\n                        decoder_8 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_8) => ((value_9) => andThen(uncurry(3, (v6) => {\n                            let decoder_7;\n                            const decoder_6 = decoder7;\n                            decoder_7 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_7) => ((value_8) => andThen((v7, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7], arg10$0040, arg20$0040), uncurry(2, decoder_7), path_7, value_8));\n                        }), uncurry(2, decoder_8), path_8, value_9));\n                    }), uncurry(2, decoder_9), path_9, value_10));\n                }), uncurry(2, decoder_10), path_10, value_11));\n            }), uncurry(2, decoder_11), path_11, value_12));\n        }), uncurry(2, decoder_12), path_12, value_13));\n    }), uncurry(2, decoder_13), path_13, value_14));\n}\n\nexport function tuple8(decoder1, decoder2, decoder3, decoder4, decoder5, decoder6, decoder7, decoder8) {\n    let decoder_15;\n    const decoder = decoder1;\n    decoder_15 = ((path) => ((value_1) => index(0, decoder, path, value_1)));\n    return (path_15) => ((value_16) => andThen(uncurry(3, (v1) => {\n        let decoder_14;\n        const decoder_1 = decoder2;\n        decoder_14 = ((path_1) => ((value_2) => index(1, decoder_1, path_1, value_2)));\n        return (path_14) => ((value_15) => andThen(uncurry(3, (v2) => {\n            let decoder_13;\n            const decoder_2 = decoder3;\n            decoder_13 = ((path_2) => ((value_3) => index(2, decoder_2, path_2, value_3)));\n            return (path_13) => ((value_14) => andThen(uncurry(3, (v3) => {\n                let decoder_12;\n                const decoder_3 = decoder4;\n                decoder_12 = ((path_3) => ((value_4) => index(3, decoder_3, path_3, value_4)));\n                return (path_12) => ((value_13) => andThen(uncurry(3, (v4) => {\n                    let decoder_11;\n                    const decoder_4 = decoder5;\n                    decoder_11 = ((path_4) => ((value_5) => index(4, decoder_4, path_4, value_5)));\n                    return (path_11) => ((value_12) => andThen(uncurry(3, (v5) => {\n                        let decoder_10;\n                        const decoder_5 = decoder6;\n                        decoder_10 = ((path_5) => ((value_6) => index(5, decoder_5, path_5, value_6)));\n                        return (path_10) => ((value_11) => andThen(uncurry(3, (v6) => {\n                            let decoder_9;\n                            const decoder_6 = decoder7;\n                            decoder_9 = ((path_6) => ((value_7) => index(6, decoder_6, path_6, value_7)));\n                            return (path_9) => ((value_10) => andThen(uncurry(3, (v7) => {\n                                let decoder_8;\n                                const decoder_7 = decoder8;\n                                decoder_8 = ((path_7) => ((value_8) => index(7, decoder_7, path_7, value_8)));\n                                return (path_8) => ((value_9) => andThen((v8, arg10$0040, arg20$0040) => succeed([v1, v2, v3, v4, v5, v6, v7, v8], arg10$0040, arg20$0040), uncurry(2, decoder_8), path_8, value_9));\n                            }), uncurry(2, decoder_9), path_9, value_10));\n                        }), uncurry(2, decoder_10), path_10, value_11));\n                    }), uncurry(2, decoder_11), path_11, value_12));\n                }), uncurry(2, decoder_12), path_12, value_13));\n            }), uncurry(2, decoder_13), path_13, value_14));\n        }), uncurry(2, decoder_14), path_14, value_15));\n    }), uncurry(2, decoder_15), path_15, value_16));\n}\n\nfunction toMap(xs) {\n    return ofSeq_1(xs);\n}\n\nfunction toSet(xs) {\n    return ofSeq_2(xs, {\n        Compare: (x, y) => compare(x, y),\n    });\n}\n\nfunction autoObject(decoderInfos, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return foldBack(uncurry(2, (tupledArg) => {\n            const name = tupledArg[0];\n            return (acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), tupledArg[1]((path + \".\") + name)(value_1[name])) : acc);\n        }), decoderInfos, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction autoObject2(keyDecoder, valueDecoder, path, value_1) {\n    if (!(value_1 === null ? false : (Object.getPrototypeOf(value_1 || false) === Object.prototype))) {\n        return new FSharpResult$2(1, [path, new ErrorReason(0, \"an object\", value_1)]);\n    }\n    else {\n        return fold_2((acc, name) => {\n            if (acc.tag === 0) {\n                const matchValue = keyDecoder(path, name);\n                if (matchValue.tag === 0) {\n                    const _arg1 = valueDecoder((path + \".\") + name, value_1[name]);\n                    if (_arg1.tag === 0) {\n                        return new FSharpResult$2(0, cons([matchValue.fields[0], _arg1.fields[0]], acc.fields[0]));\n                    }\n                    else {\n                        return new FSharpResult$2(1, _arg1.fields[0]);\n                    }\n                }\n                else {\n                    return new FSharpResult$2(1, matchValue.fields[0]);\n                }\n            }\n            else {\n                return acc;\n            }\n        }, new FSharpResult$2(0, empty()), Object.keys(value_1));\n    }\n}\n\nfunction mixedArray(msg, decoders, path, values) {\n    let arg30, arg10;\n    if (decoders.length !== values.length) {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, (arg30 = (values.length | 0), (arg10 = (decoders.length | 0), toText(printf(\"Expected %i %s but got %i\"))(arg10)(msg)(arg30))))]);\n    }\n    else {\n        return foldBack2(uncurry(3, mapCurriedArgs((value_1) => ((decoder) => ((acc) => ((acc.tag === 0) ? Result_Map((v) => cons(v, acc.fields[0]), decoder(path, value_1)) : acc))), [0, [0, 2], 0])), values, decoders, new FSharpResult$2(0, empty()));\n    }\n}\n\nfunction makeUnion(extra, caseStrategy, t, name, path, values) {\n    const uci = tryFind((x) => (name_3(x) === name), getUnionCases(t, true));\n    if (uci != null) {\n        const uci_1 = uci;\n        if (values.length === 0) {\n            return new FSharpResult$2(0, makeUnion_1(uci_1, [], true));\n        }\n        else {\n            return Result_Map((values_1) => makeUnion_1(uci_1, toArray(values_1), true), mixedArray(\"union fields\", map_2((fi) => autoDecoder(extra, caseStrategy, false, fi[1]), getUnionCaseFields(uci_1)), path, values));\n        }\n    }\n    else {\n        return new FSharpResult$2(1, [path, new ErrorReason(6, ((\"Cannot find case \" + name) + \" in \") + fullName(t))]);\n    }\n}\n\nfunction autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t) {\n    const decoderRef = new FSharpRef(null);\n    const extra_1 = add(fullName(t), decoderRef, extra);\n    let decoder;\n    if (isRecord(t, true)) {\n        const decoders = map_2((fi) => [Util_Casing_convert(caseStrategy, name_3(fi)), autoDecoder(extra_1, caseStrategy, false, fi[1])], getRecordElements(t, true));\n        decoder = ((path) => ((value_1) => Result_Map((xs) => makeRecord(t, toArray(xs), true), autoObject(decoders, path, value_1))));\n    }\n    else if (isUnion(t, true)) {\n        decoder = ((path_1) => ((value_2) => {\n            if ((typeof value_2) === \"string\") {\n                return makeUnion(extra_1, caseStrategy, t, value_2, path_1, []);\n            }\n            else if (Array.isArray(value_2)) {\n                const values = value_2;\n                return makeUnion(extra_1, caseStrategy, t, values[0], path_1, values.slice(1, values.length));\n            }\n            else {\n                return new FSharpResult$2(1, [path_1, new ErrorReason(0, \"a string or array\", value_2)]);\n            }\n        }));\n    }\n    else if (isOptional) {\n        decoder = ((path_2) => ((value_3) => (new FSharpResult$2(1, [path_2, new ErrorReason(2, \"an extra coder for \" + fullName(t), value_3)]))));\n    }\n    else {\n        let message;\n        const arg10 = fullName(t);\n        message = toText(printf(\"Cannot generate auto decoder for %s. Please pass an extra decoder.\"))(arg10);\n        throw (new Error(message));\n    }\n    decoderRef.contents = decoder;\n    return decoder;\n}\n\nfunction autoDecoder(extra, caseStrategy, isOptional, t) {\n    let decoder_15;\n    const fullname = fullName(t);\n    const matchValue = tryFind_1(fullname, extra);\n    if (matchValue == null) {\n        if (isArray(t)) {\n            const decoder = autoDecoder(extra, caseStrategy, false, getElementType(t));\n            return (path_1) => ((value_2) => array(uncurry(2, decoder), path_1, value_2));\n        }\n        else if (isEnum(t)) {\n            const enumType = fullName(getEnumUnderlyingType(t));\n            if (enumType === \"System.SByte\") {\n                return (path_2) => ((value_4) => {\n                    const t_2 = t;\n                    const path_3 = path_2;\n                    const value_5 = value_4;\n                    const matchValue_1 = sbyte(path_3)(value_5);\n                    if (matchValue_1.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_1.fields[0]);\n                    }\n                    else {\n                        const enumValue = matchValue_1.fields[0];\n                        return contains(enumValue, getEnumValues(t_2), {\n                            Equals: (x, y) => (x === y),\n                            GetHashCode: (x) => numberHash(x),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_2, enumValue.toString()))) : (new FSharpResult$2(1, [path_3, new ErrorReason(1, fullName(t_2), value_5, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Byte\") {\n                return (path_4) => ((value_7) => {\n                    const t_3 = t;\n                    const path_5 = path_4;\n                    const value_8 = value_7;\n                    const matchValue_2 = byte(path_5)(value_8);\n                    if (matchValue_2.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_2.fields[0]);\n                    }\n                    else {\n                        const enumValue_1 = matchValue_2.fields[0];\n                        return contains(enumValue_1, getEnumValues(t_3), {\n                            Equals: (x_1, y_1) => (x_1 === y_1),\n                            GetHashCode: (x_1) => numberHash(x_1),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_3, enumValue_1.toString()))) : (new FSharpResult$2(1, [path_5, new ErrorReason(1, fullName(t_3), value_8, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int16\") {\n                return (path_6) => ((value_10) => {\n                    const t_4 = t;\n                    const path_7 = path_6;\n                    const value_11 = value_10;\n                    const matchValue_3 = int16(path_7)(value_11);\n                    if (matchValue_3.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_3.fields[0]);\n                    }\n                    else {\n                        const enumValue_2 = matchValue_3.fields[0];\n                        return contains(enumValue_2, getEnumValues(t_4), {\n                            Equals: (x_2, y_2) => (x_2 === y_2),\n                            GetHashCode: (x_2) => numberHash(x_2),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_4, int16ToString(enumValue_2)))) : (new FSharpResult$2(1, [path_7, new ErrorReason(1, fullName(t_4), value_11, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt16\") {\n                return (path_8) => ((value_13) => {\n                    const t_5 = t;\n                    const path_9 = path_8;\n                    const value_14 = value_13;\n                    const matchValue_4 = uint16(path_9)(value_14);\n                    if (matchValue_4.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_4.fields[0]);\n                    }\n                    else {\n                        const enumValue_3 = matchValue_4.fields[0];\n                        return contains(enumValue_3, getEnumValues(t_5), {\n                            Equals: (x_3, y_3) => (x_3 === y_3),\n                            GetHashCode: (x_3) => numberHash(x_3),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_5, enumValue_3.toString()))) : (new FSharpResult$2(1, [path_9, new ErrorReason(1, fullName(t_5), value_14, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.Int32\") {\n                return (path_10) => ((value_16) => {\n                    const t_6 = t;\n                    const path_11 = path_10;\n                    const value_17 = value_16;\n                    const matchValue_5 = int(path_11)(value_17);\n                    if (matchValue_5.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_5.fields[0]);\n                    }\n                    else {\n                        const enumValue_4 = matchValue_5.fields[0];\n                        return contains(enumValue_4, getEnumValues(t_6), {\n                            Equals: (x_4, y_4) => (x_4 === y_4),\n                            GetHashCode: (x_4) => numberHash(x_4),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_6, int32ToString(enumValue_4)))) : (new FSharpResult$2(1, [path_11, new ErrorReason(1, fullName(t_6), value_17, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else if (enumType === \"System.UInt32\") {\n                return (path_12) => ((value_19) => {\n                    const t_7 = t;\n                    const path_13 = path_12;\n                    const value_20 = value_19;\n                    const matchValue_6 = uint32(path_13)(value_20);\n                    if (matchValue_6.tag === 1) {\n                        return new FSharpResult$2(1, matchValue_6.fields[0]);\n                    }\n                    else {\n                        const enumValue_5 = matchValue_6.fields[0];\n                        return contains(enumValue_5, getEnumValues(t_7), {\n                            Equals: (x_5, y_5) => (x_5 === y_5),\n                            GetHashCode: (x_5) => numberHash(x_5),\n                        }) ? (new FSharpResult$2(0, parseEnum(t_7, enumValue_5.toString()))) : (new FSharpResult$2(1, [path_13, new ErrorReason(1, fullName(t_7), value_20, \"Unkown value provided for the enum\")]));\n                    }\n                });\n            }\n            else {\n                const arg10 = fullName(t);\n                const clo2 = toFail(printf(\"Cannot generate auto decoder for %s.\\nThoth.Json.Net only support the folluwing enum types:\\n- sbyte\\n- byte\\n- int16\\n- uint16\\n- int\\n- uint32\\nIf you can\\u0027t use one of these types, please pass an extra decoder.\\n                    \"))(arg10);\n                return (arg20) => {\n                    const clo3 = clo2(arg20);\n                    return (arg30) => clo3(arg30);\n                };\n            }\n        }\n        else if (isGenericType(t)) {\n            if (isTuple(t)) {\n                const decoders = map_2((t_8) => autoDecoder(extra, caseStrategy, false, t_8), getTupleElements(t));\n                return (path_14) => ((value_21) => (Array.isArray(value_21) ? Result_Map((xs) => makeTuple(toArray(xs), t), mixedArray(\"tuple elements\", decoders, path_14, value_21)) : (new FSharpResult$2(1, [path_14, new ErrorReason(0, \"an array\", value_21)]))));\n            }\n            else {\n                const fullname_1 = fullName(getGenericTypeDefinition(t));\n                if (fullname_1 === \"Microsoft.FSharp.Core.FSharpOption`1[System.Object]\") {\n                    const decoder_13 = autoDecoder(extra, caseStrategy, true, getGenerics(t)[0]);\n                    return (path_15) => ((value_22) => option(uncurry(2, decoder_13), path_15, value_22));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpList`1[System.Object]\") {\n                    const decoder_14 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_16) => ((value_23) => list(uncurry(2, decoder_14), path_16, value_23));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpMap`2[System.Object,System.Object]\") {\n                    const keyDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    const valueDecoder = autoDecoder(extra, caseStrategy, false, getGenerics(t)[1]);\n                    let d1;\n                    const decoders_1 = ofArray([(path_17) => ((value_24) => autoObject2(uncurry(2, keyDecoder), uncurry(2, valueDecoder), path_17, value_24)), (decoder_15 = tuple2(uncurry(2, keyDecoder), uncurry(2, valueDecoder)), (path_18) => ((value_25) => list(uncurry(2, decoder_15), path_18, value_25)))]);\n                    d1 = ((path_19) => ((value_26) => oneOf(decoders_1, path_19, value_26)));\n                    return (path_20) => ((value_28) => map((ar) => toMap(ar), uncurry(2, d1), path_20, value_28));\n                }\n                else if (fullname_1 === \"Microsoft.FSharp.Collections.FSharpSet`1[System.Object]\") {\n                    const decoder_16 = autoDecoder(extra, caseStrategy, false, getGenerics(t)[0]);\n                    return (path_21) => ((value_29) => {\n                        const matchValue_7 = array(uncurry(2, decoder_16), path_21, value_29);\n                        return (matchValue_7.tag === 0) ? (new FSharpResult$2(0, toSet(matchValue_7.fields[0]))) : (new FSharpResult$2(1, matchValue_7.fields[0]));\n                    });\n                }\n                else {\n                    return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n                }\n            }\n        }\n        else if (fullname === \"System.Boolean\") {\n            return (path_22) => ((value_31) => bool(path_22, value_31));\n        }\n        else if (fullname === \"Microsoft.FSharp.Core.Unit\") {\n            return (path_23) => ((value_32) => unit(path_23, value_32));\n        }\n        else if (fullname === \"System.String\") {\n            return (path_24) => ((value_33) => string(path_24, value_33));\n        }\n        else if (fullname === \"System.SByte\") {\n            return sbyte;\n        }\n        else if (fullname === \"System.Byte\") {\n            return byte;\n        }\n        else if (fullname === \"System.Int16\") {\n            return int16;\n        }\n        else if (fullname === \"System.UInt16\") {\n            return uint16;\n        }\n        else if (fullname === \"System.Int32\") {\n            return int;\n        }\n        else if (fullname === \"System.UInt32\") {\n            return uint32;\n        }\n        else if (fullname === \"System.Double\") {\n            return (path_25) => ((value_34) => float(path_25, value_34));\n        }\n        else if (fullname === \"System.Single\") {\n            return (path_26) => ((value_35) => float32(path_26, value_35));\n        }\n        else if (fullname === \"System.DateTime\") {\n            return (path_27) => ((value_36) => datetime(path_27, value_36));\n        }\n        else if (fullname === \"System.DateTimeOffset\") {\n            return (path_28) => ((value_37) => datetimeOffset(path_28, value_37));\n        }\n        else if (fullname === \"System.TimeSpan\") {\n            return (path_29) => ((value_38) => timespan(path_29, value_38));\n        }\n        else if (fullname === \"System.Guid\") {\n            return (path_30) => ((value_39) => guid(path_30, value_39));\n        }\n        else if (fullname === \"System.Object\") {\n            return (_arg1_6) => ((v) => (new FSharpResult$2(0, v)));\n        }\n        else {\n            return autoDecodeRecordsAndUnions(extra, caseStrategy, isOptional, t);\n        }\n    }\n    else {\n        const decoderRef = matchValue;\n        return (path) => ((value_1) => decoderRef.contents(path)(value_1));\n    }\n}\n\nfunction makeExtra(extra) {\n    if (extra != null) {\n        return map_3((_arg2, tupledArg) => (new FSharpRef(tupledArg[1])), extra.Coders);\n    }\n    else {\n        return empty_1();\n    }\n}\n\nexport class Auto {\n    constructor() {\n    }\n}\n\nexport function Auto$reflection() {\n    return class_type(\"Thoth.Json.Decode.Auto\", void 0, Auto);\n}\n\nexport function Auto_generateBoxedDecoderCached_79988AEF(t, caseStrategy, extra) {\n    let y_1, y;\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    return Util_Cache$1__GetOrAdd_43981464(Util_CachedDecoders, (y_1 = (y = fullName(t), toString_12(caseStrategy_1) + y), defaultArg(map_4((e) => e.Hash, extra), \"\") + y_1), () => autoDecoder(makeExtra(extra), caseStrategy_1, false, t));\n}\n\nexport function Auto_generateBoxedDecoder_79988AEF(t, caseStrategy, extra) {\n    const caseStrategy_1 = defaultArg(caseStrategy, new CaseStrategy(0));\n    return autoDecoder(makeExtra(extra), caseStrategy_1, false, t);\n}\n\n","import { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\nimport { record_type, float64_type, int32_type, array_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\nimport { float, int, array as array_1, string, object } from \"./.fable/Thoth.Json.7.0.0/Decode.fs.js\";\nimport { uncurry } from \"./.fable/fable-library.3.1.11/Util.js\";\nimport colormap from \"colormap\";\nimport { mapIndexed } from \"./.fable/fable-library.3.1.11/Array.js\";\n\nexport class MinimalConfig extends Record {\n    constructor(Scorer, Individuals, Uniquebodyparts, Multianimalbodyparts, Skeleton, Bodyparts, SkeletonColor, Dotsize, Alphavalue, Colormap) {\n        super();\n        this.Scorer = Scorer;\n        this.Individuals = Individuals;\n        this.Uniquebodyparts = Uniquebodyparts;\n        this.Multianimalbodyparts = Multianimalbodyparts;\n        this.Skeleton = Skeleton;\n        this.Bodyparts = Bodyparts;\n        this.SkeletonColor = SkeletonColor;\n        this.Dotsize = (Dotsize | 0);\n        this.Alphavalue = Alphavalue;\n        this.Colormap = Colormap;\n    }\n}\n\nexport function MinimalConfig$reflection() {\n    return record_type(\"ConfigDecoder.MinimalConfig\", [], MinimalConfig, () => [[\"Scorer\", string_type], [\"Individuals\", array_type(string_type)], [\"Uniquebodyparts\", array_type(string_type)], [\"Multianimalbodyparts\", array_type(string_type)], [\"Skeleton\", array_type(array_type(string_type))], [\"Bodyparts\", string_type], [\"SkeletonColor\", string_type], [\"Dotsize\", int32_type], [\"Alphavalue\", float64_type], [\"Colormap\", string_type]]);\n}\n\nexport function MinimalConfig_get_Decoder() {\n    return (path_14) => ((v) => object((get$) => (new MinimalConfig(get$.Required.Field(\"scorer\", (path, value) => string(path, value)), get$.Required.Field(\"individuals\", (path_2, value_2) => array_1((path_1, value_1) => string(path_1, value_1), path_2, value_2)), get$.Required.Field(\"uniquebodyparts\", (path_4, value_4) => array_1((path_3, value_3) => string(path_3, value_3), path_4, value_4)), get$.Required.Field(\"multianimalbodyparts\", (path_6, value_6) => array_1((path_5, value_5) => string(path_5, value_5), path_6, value_6)), get$.Required.Field(\"skeleton\", (path_9, value_9) => array_1((path_8, value_8) => array_1((path_7, value_7) => string(path_7, value_7), path_8, value_8), path_9, value_9)), get$.Required.Field(\"bodyparts\", (path_10, value_10) => string(path_10, value_10)), get$.Required.Field(\"skeleton_color\", (path_11, value_11) => string(path_11, value_11)), get$.Required.Field(\"dotsize\", uncurry(2, int)), get$.Required.Field(\"alphavalue\", (path_12, value_12) => float(path_12, value_12)), get$.Required.Field(\"colormap\", (path_13, value_13) => string(path_13, value_13)))), path_14, v));\n}\n\nexport function MinimalConfig__get_BodyColors(this$) {\n    const map = colormap({\n        colormap: this$.Colormap,\n        format: \"hex\",\n        nshades: this$.Multianimalbodyparts.length,\n    });\n    return new Map(mapIndexed((i, x) => [x, map[i]], this$.Multianimalbodyparts));\n}\n\nexport function MinimalConfig__get_IndividualColors(this$) {\n    const map = colormap({\n        colormap: \"jet\",\n        format: \"hex\",\n        nshades: (this$.Individuals.length > 8) ? this$.Individuals.length : 8,\n    });\n    return new Map(mapIndexed((i, x) => [x, map[i]], this$.Individuals));\n}\n\nexport function MinimalConfig_get_Stub() {\n    return new MinimalConfig(\"Pavel\", [\"individual1\", \"individual2\", \"individual3\", \"individual4\", \"individual5\", \"individual6\", \"individual7\", \"individual8\"], [\"part1\", \"part2\"], [\"forehead\", \"nose\", \"neck\", \"right_shoulder\", \"right_elbow\", \"right_wrist\", \"right_base_knuckle\", \"right_first_knuckle\", \"left_shoulder\", \"left_elbow\", \"left_wrist\", \"left_base_knuckle\", \"left_first_knuckle\", \"shoulder_blades\", \"lower_back\", \"right_hip\", \"right_knee\", \"right_ankle\", \"right_toes\", \"left_hip\", \"left_knee\", \"left_ankle\", \"left_toes\"], [[\"right_shoulder\", \"right_elbow\"], [\"left_ankle\", \"left_toes\"], [\"right_shoulder\", \"shoulder_blades\"], [\"forehead\", \"neck\"], [\"left_shoulder\", \"left_elbow\"], [\"lower_back\", \"left_hip\"], [\"right_ankle\", \"right_toes\"], [\"neck\", \"left_shoulder\"], [\"shoulder_blades\", \"lower_back\"], [\"right_elbow\", \"right_wrist\"], [\"right_wrist\", \"right_base_knuckle\"], [\"lower_back\", \"right_hip\"], [\"forehead\", \"nose\"], [\"left_elbow\", \"left_wrist\"], [\"nose\", \"neck\"], [\"left_wrist\", \"left_base_knuckle\"], [\"left_hip\", \"left_knee\"], [\"neck\", \"shoulder_blades\"], [\"right_base_knuckle\", \"right_first_knuckle\"], [\"right_hip\", \"right_knee\"], [\"left_knee\", \"left_ankle\"], [\"neck\", \"right_shoulder\"], [\"left_base_knuckle\", \"left_first_knuckle\"], [\"left_shoulder\", \"shoulder_blades\"], [\"right_knee\", \"right_ankle\"]], \"MULTI!\", \"black\", 12, 0.7, \"rainbow\");\n}\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(Array.from(computations, (w) => startAsPromise(w))));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { Choice_tryValueIfChoice1Of2, Choice_tryValueIfChoice2Of2 } from \"./Choice.js\";\nimport { value } from \"./Option.js\";\nexport class Observer {\n    constructor(onNext, onError, onCompleted) {\n        this.OnNext = onNext;\n        this.OnError = onError || ((_e) => { return; });\n        this.OnCompleted = onCompleted || (() => { return; });\n    }\n}\nclass Observable {\n    constructor(subscribe) {\n        this.Subscribe = subscribe;\n    }\n}\nexport function protect(f, succeed, fail) {\n    try {\n        return succeed(f());\n    }\n    catch (e) {\n        fail(e);\n    }\n}\nexport function add(callback, source) {\n    source.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)));\n}\nexport function filter(predicate, source) {\n    return choose((x) => predicate(x) ? x : null, source);\n}\nexport function map(mapping, source) {\n    return new Observable((observer) => source.Subscribe(new Observer((t) => {\n        protect(() => mapping(t), observer.OnNext, observer.OnError);\n    }, observer.OnError, observer.OnCompleted)));\n}\nexport function merge(source1, source2) {\n    return new Observable((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    });\n}\nexport function pairwise(source) {\n    return new Observable((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function partition(predicate, source) {\n    return [filter(predicate, source), filter((x) => !predicate(x), source)];\n}\nexport function scan(collector, state, source) {\n    return new Observable((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    });\n}\nexport function split(splitter, source) {\n    return [\n        choose((v) => Choice_tryValueIfChoice1Of2(splitter(v)), source),\n        choose((v) => Choice_tryValueIfChoice2Of2(splitter(v)), source)\n    ];\n}\nexport function subscribe(callback, source) {\n    return source.Subscribe(new Observer(callback));\n}\n","import { Observer, protect } from \"./Observable.js\";\nimport { some, value } from \"./Option.js\";\nimport { Choice_tryValueIfChoice1Of2, Choice_tryValueIfChoice2Of2 } from \"./Choice.js\";\nexport class Event {\n    constructor(_subscriber, delegates) {\n        this._subscriber = _subscriber;\n        this.delegates = delegates || new Array();\n    }\n    Add(f) {\n        this._addHandler(f);\n    }\n    // IEvent<T> methods\n    get Publish() {\n        return this;\n    }\n    Trigger(value) {\n        this.delegates.forEach((f) => f(value));\n    }\n    // IDelegateEvent<T> methods\n    AddHandler(handler) {\n        if (this._dotnetDelegates == null) {\n            this._dotnetDelegates = new Map();\n        }\n        const f = (x) => handler(null, x);\n        this._dotnetDelegates.set(handler, f);\n        this._addHandler(f);\n    }\n    RemoveHandler(handler) {\n        if (this._dotnetDelegates != null) {\n            const f = this._dotnetDelegates.get(handler);\n            if (f != null) {\n                this._dotnetDelegates.delete(handler);\n                this._removeHandler(f);\n            }\n        }\n    }\n    // IObservable<T> methods\n    Subscribe(arg) {\n        return typeof arg === \"function\"\n            ? this._subscribeFromCallback(arg)\n            : this._subscribeFromObserver(arg);\n    }\n    _addHandler(f) {\n        this.delegates.push(f);\n    }\n    _removeHandler(f) {\n        const index = this.delegates.indexOf(f);\n        if (index > -1) {\n            this.delegates.splice(index, 1);\n        }\n    }\n    _subscribeFromObserver(observer) {\n        if (this._subscriber) {\n            return this._subscriber(observer);\n        }\n        const callback = observer.OnNext;\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n    _subscribeFromCallback(callback) {\n        this._addHandler(callback);\n        return { Dispose: () => { this._removeHandler(callback); } };\n    }\n}\nexport function add(callback, sourceEvent) {\n    sourceEvent.Subscribe(new Observer(callback));\n}\nexport function choose(chooser, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => chooser(t), (u) => { if (u != null) {\n        observer.OnNext(value(u));\n    } }, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function filter(predicate, sourceEvent) {\n    return choose((x) => predicate(x) ? some(x) : undefined, sourceEvent);\n}\nexport function map(mapping, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => source.Subscribe(new Observer((t) => protect(() => mapping(t), observer.OnNext, observer.OnError), observer.OnError, observer.OnCompleted)), source.delegates);\n}\nexport function merge(event1, event2) {\n    const source1 = event1;\n    const source2 = event2;\n    return new Event((observer) => {\n        let stopped = false;\n        let completed1 = false;\n        let completed2 = false;\n        const h1 = source1.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed1 = true;\n                if (completed2) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        const h2 = source2.Subscribe(new Observer((v) => { if (!stopped) {\n            observer.OnNext(v);\n        } }, (e) => {\n            if (!stopped) {\n                stopped = true;\n                observer.OnError(e);\n            }\n        }, () => {\n            if (!stopped) {\n                completed2 = true;\n                if (completed1) {\n                    stopped = true;\n                    observer.OnCompleted();\n                }\n            }\n        }));\n        return {\n            Dispose() {\n                h1.Dispose();\n                h2.Dispose();\n            },\n        };\n    }, source1.delegates.concat(source2.delegates));\n}\nexport function pairwise(sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        let last;\n        return source.Subscribe(new Observer((next) => {\n            if (last != null) {\n                observer.OnNext([last, next]);\n            }\n            last = next;\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function partition(predicate, sourceEvent) {\n    return [filter(predicate, sourceEvent), filter((x) => !predicate(x), sourceEvent)];\n}\nexport function scan(collector, state, sourceEvent) {\n    const source = sourceEvent;\n    return new Event((observer) => {\n        return source.Subscribe(new Observer((t) => {\n            protect(() => collector(state, t), (u) => { state = u; observer.OnNext(u); }, observer.OnError);\n        }, observer.OnError, observer.OnCompleted));\n    }, source.delegates);\n}\nexport function split(splitter, sourceEvent) {\n    return [\n        choose((v) => Choice_tryValueIfChoice1Of2(splitter(v)), sourceEvent),\n        choose((v) => Choice_tryValueIfChoice2Of2(splitter(v)), sourceEvent),\n    ];\n}\nexport default Event;\n","import Event from \"./Event.js\";\nexport class Timer {\n    constructor(interval) {\n        this._enabled = false;\n        this._isDisposed = false;\n        this._intervalId = 0;\n        this._timeoutId = 0;\n        this.Interval = interval && interval > 0 ? interval : 100;\n        this.AutoReset = true;\n        this._elapsed = new Event();\n    }\n    get Elapsed() {\n        return this._elapsed;\n    }\n    get Enabled() {\n        return this._enabled;\n    }\n    set Enabled(x) {\n        if (!this._isDisposed && this._enabled !== x) {\n            this._enabled = x;\n            if (this._enabled) {\n                if (this.AutoReset) {\n                    this._intervalId = setInterval(() => {\n                        if (!this.AutoReset) {\n                            this.Enabled = false;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n                else {\n                    this._timeoutId = setTimeout(() => {\n                        this.Enabled = false;\n                        this._timeoutId = 0;\n                        if (this.AutoReset) {\n                            this.Enabled = true;\n                        }\n                        this._elapsed.Trigger(new Date());\n                    }, this.Interval);\n                }\n            }\n            else {\n                if (this._timeoutId) {\n                    clearTimeout(this._timeoutId);\n                    this._timeoutId = 0;\n                }\n                if (this._intervalId) {\n                    clearInterval(this._intervalId);\n                    this._intervalId = 0;\n                }\n            }\n        }\n    }\n    Dispose() {\n        this.Enabled = false;\n        this._isDisposed = true;\n    }\n    Close() {\n        this.Dispose();\n    }\n    Start() {\n        this.Enabled = true;\n    }\n    Stop() {\n        this.Enabled = false;\n    }\n}\nexport default Timer;\n","import { some } from \"../fable-library.3.1.11/Option.js\";\nimport Timer from \"../fable-library.3.1.11/Timer.js\";\nimport { add } from \"../fable-library.3.1.11/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed);\n    t.Enabled = true;\n    t.Start();\n}\n\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.11/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.1.11/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.11/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { compare } from \"./Util.js\";\nimport { unfold, delay } from \"./Seq.js\";\nimport { op_Addition, fromZero } from \"./BigInt.js\";\nimport { op_Addition as op_Addition_1, fromParts } from \"./Decimal.js\";\nimport { op_Addition as op_Addition_2, fromBits } from \"./Long.js\";\n\nexport function makeRangeStepFunction(step, stop, zero, add) {\n    const stepComparedWithZero = compare(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = compare(x, stop) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, add(x, step)] : (void 0);\n    };\n}\n\nexport function integralRangeStep(start, step, stop, zero, add) {\n    const stepFn = makeRangeStepFunction(step, stop, zero, add);\n    return delay(() => unfold(stepFn, start));\n}\n\nexport function rangeBigInt(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromZero(), (x, y) => op_Addition(x, y));\n}\n\nexport function rangeDecimal(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromParts(0, 0, 0, false, 0), (x, y) => op_Addition_1(x, y));\n}\n\nexport function rangeDouble(start, step, stop) {\n    return integralRangeStep(start, step, stop, 0, (x, y) => (x + y));\n}\n\nexport function rangeInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, false), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeUInt64(start, step, stop) {\n    return integralRangeStep(start, step, stop, fromBits(0, 0, true), (x, y) => op_Addition_2(x, y));\n}\n\nexport function rangeChar(start, stop) {\n    const intStop = stop.charCodeAt(0) | 0;\n    return delay(() => unfold((c) => {\n        if (c <= intStop) {\n            return [String.fromCharCode(c), c + 1];\n        }\n        else {\n            return void 0;\n        }\n    }, start.charCodeAt(0)));\n}\n\n","import { Union } from \"../fable-library.3.1.11/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.11/Reflection.js\";\nimport { fill } from \"../fable-library.3.1.11/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.1.11/Util.js\";\nimport { some } from \"../fable-library.3.1.11/Option.js\";\nimport { singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.11/Seq.js\";\nimport { rangeDouble } from \"../fable-library.3.1.11/Range.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeDouble(0, 1, items.length))))))));\n}\n\n","import { Record } from \"../fable-library.3.1.11/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.1.11/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, uncurry } from \"../fable-library.3.1.11/Util.js\";\nimport { ofArray } from \"../fable-library.3.1.11/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.1.11/Option.js\";\nimport { printf, toText } from \"../fable-library.3.1.11/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        void view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        void view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, program.view, program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, program.view);\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, program.view, program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [program.update]);\n    const view = partialApply(2, mapView, [program.view]);\n    const setState = partialApply(2, mapSetState, [program.setState]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { some } from \"../fable-library.3.1.11/Option.js\";\nimport { create, isLeapYear } from \"../fable-library.3.1.11/Date.js\";\nimport { parse } from \"../fable-library.3.1.11/Int32.js\";\nimport { split, isNullOrWhiteSpace } from \"../fable-library.3.1.11/String.js\";\nimport { equalsWith } from \"../fable-library.3.1.11/Array.js\";\nimport { comparePrimitives } from \"../fable-library.3.1.11/Util.js\";\nimport react from \"react\";\n\nexport function DateParsing_$007CBetween$007C_$007C(x, y, input) {\n    if ((input >= x) ? (input <= y) : false) {\n        return some(void 0);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function DateParsing_isLeapYear(year) {\n    return isLeapYear(year);\n}\n\nexport function DateParsing_$007CInt$007C_$007C(input) {\n    try {\n        return parse(input, 511, false, 32);\n    }\n    catch (matchValue) {\n        return void 0;\n    }\n}\n\nexport function DateParsing_parse(input) {\n    try {\n        if (isNullOrWhiteSpace(input)) {\n            return void 0;\n        }\n        else {\n            const parts = split(input, [\"-\"], null, 0);\n            let patternInput;\n            let pattern_matching_result, month, year;\n            if ((!equalsWith((x, y) => comparePrimitives(x, y), parts, null)) ? (parts.length === 2) : false) {\n                const activePatternResult2910 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                if (activePatternResult2910 != null) {\n                    const activePatternResult2911 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                    if (activePatternResult2911 != null) {\n                        pattern_matching_result = 0;\n                        month = activePatternResult2911;\n                        year = activePatternResult2910;\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    patternInput = [year, month, 1, 0, 0];\n                    break;\n                }\n                case 1: {\n                    let pattern_matching_result_1, day, month_1, year_1;\n                    if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), parts, null)) ? (parts.length === 3) : false) {\n                        const activePatternResult2907 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                        if (activePatternResult2907 != null) {\n                            const activePatternResult2908 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                            if (activePatternResult2908 != null) {\n                                const activePatternResult2909 = DateParsing_$007CInt$007C_$007C(parts[2]);\n                                if (activePatternResult2909 != null) {\n                                    pattern_matching_result_1 = 0;\n                                    day = activePatternResult2909;\n                                    month_1 = activePatternResult2908;\n                                    year_1 = activePatternResult2907;\n                                }\n                                else {\n                                    pattern_matching_result_1 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_1 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_1 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_1 = 1;\n                    }\n                    switch (pattern_matching_result_1) {\n                        case 0: {\n                            patternInput = [year_1, month_1, day, 0, 0];\n                            break;\n                        }\n                        case 1: {\n                            let pattern_matching_result_2, day_1, month_2, year_2;\n                            if ((!equalsWith((x_2, y_2) => comparePrimitives(x_2, y_2), parts, null)) ? (parts.length === 3) : false) {\n                                const activePatternResult2905 = DateParsing_$007CInt$007C_$007C(parts[0]);\n                                if (activePatternResult2905 != null) {\n                                    const activePatternResult2906 = DateParsing_$007CInt$007C_$007C(parts[1]);\n                                    if (activePatternResult2906 != null) {\n                                        pattern_matching_result_2 = 0;\n                                        day_1 = parts[2];\n                                        month_2 = activePatternResult2906;\n                                        year_2 = activePatternResult2905;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_2 = 1;\n                            }\n                            switch (pattern_matching_result_2) {\n                                case 0: {\n                                    if (day_1.indexOf(\"T\") >= 0) {\n                                        const matchValue = split(day_1, [\"T\"], null, 0);\n                                        let pattern_matching_result_3, parsedDay, time;\n                                        if ((!equalsWith((x_3, y_3) => comparePrimitives(x_3, y_3), matchValue, null)) ? (matchValue.length === 2) : false) {\n                                            const activePatternResult2904 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\n                                            if (activePatternResult2904 != null) {\n                                                pattern_matching_result_3 = 0;\n                                                parsedDay = activePatternResult2904;\n                                                time = matchValue[1];\n                                            }\n                                            else {\n                                                pattern_matching_result_3 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_3 = 1;\n                                        }\n                                        switch (pattern_matching_result_3) {\n                                            case 0: {\n                                                const matchValue_1 = split(time, [\":\"], null, 0);\n                                                let pattern_matching_result_4, hour, minute;\n                                                if ((!equalsWith((x_4, y_4) => comparePrimitives(x_4, y_4), matchValue_1, null)) ? (matchValue_1.length === 2) : false) {\n                                                    const activePatternResult2902 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\n                                                    if (activePatternResult2902 != null) {\n                                                        const activePatternResult2903 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\n                                                        if (activePatternResult2903 != null) {\n                                                            pattern_matching_result_4 = 0;\n                                                            hour = activePatternResult2902;\n                                                            minute = activePatternResult2903;\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_4 = 1;\n                                                        }\n                                                    }\n                                                    else {\n                                                        pattern_matching_result_4 = 1;\n                                                    }\n                                                }\n                                                else {\n                                                    pattern_matching_result_4 = 1;\n                                                }\n                                                switch (pattern_matching_result_4) {\n                                                    case 0: {\n                                                        const matchValue_2 = [hour, minute];\n                                                        let pattern_matching_result_5;\n                                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\n                                                            if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\n                                                                pattern_matching_result_5 = 0;\n                                                            }\n                                                            else {\n                                                                pattern_matching_result_5 = 1;\n                                                            }\n                                                        }\n                                                        else {\n                                                            pattern_matching_result_5 = 1;\n                                                        }\n                                                        switch (pattern_matching_result_5) {\n                                                            case 0: {\n                                                                patternInput = [year_2, month_2, parsedDay, hour, minute];\n                                                                break;\n                                                            }\n                                                            case 1: {\n                                                                patternInput = [-1, 1, 1, 0, 0];\n                                                                break;\n                                                            }\n                                                        }\n                                                        break;\n                                                    }\n                                                    case 1: {\n                                                        patternInput = [-1, 1, 1, 0, 0];\n                                                        break;\n                                                    }\n                                                }\n                                                break;\n                                            }\n                                            case 1: {\n                                                patternInput = [-1, 1, 1, 0, 0];\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        patternInput = [-1, 1, 1, 0, 0];\n                                    }\n                                    break;\n                                }\n                                case 1: {\n                                    patternInput = [-1, 1, 1, 0, 0];\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            const year_3 = patternInput[0] | 0;\n            const month_3 = patternInput[1] | 0;\n            const minute_1 = patternInput[4] | 0;\n            const hour_1 = patternInput[3] | 0;\n            const day_2 = patternInput[2] | 0;\n            if (year_3 <= 0) {\n                return void 0;\n            }\n            else {\n                const matchValue_3 = [month_3, day_2];\n                let pattern_matching_result_6;\n                if (matchValue_3[0] === 2) {\n                    if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\n                        if (DateParsing_isLeapYear(year_3)) {\n                            pattern_matching_result_6 = 0;\n                        }\n                        else {\n                            pattern_matching_result_6 = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_6 = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result_6 = 1;\n                }\n                switch (pattern_matching_result_6) {\n                    case 0: {\n                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                    }\n                    case 1: {\n                        let pattern_matching_result_7;\n                        if (matchValue_3[0] === 2) {\n                            if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\n                                if (!DateParsing_isLeapYear(year_3)) {\n                                    pattern_matching_result_7 = 0;\n                                }\n                                else {\n                                    pattern_matching_result_7 = 1;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_7 = 1;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_7 = 1;\n                        }\n                        switch (pattern_matching_result_7) {\n                            case 0: {\n                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                            }\n                            case 1: {\n                                let pattern_matching_result_8;\n                                if (matchValue_3[0] === 1) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 3) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 5) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 7) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 8) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 10) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else if (matchValue_3[0] === 12) {\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\n                                        pattern_matching_result_8 = 0;\n                                    }\n                                    else {\n                                        pattern_matching_result_8 = 1;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_8 = 1;\n                                }\n                                switch (pattern_matching_result_8) {\n                                    case 0: {\n                                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                    }\n                                    case 1: {\n                                        let pattern_matching_result_9;\n                                        if (matchValue_3[0] === 4) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 6) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 9) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else if (matchValue_3[0] === 11) {\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\n                                                pattern_matching_result_9 = 0;\n                                            }\n                                            else {\n                                                pattern_matching_result_9 = 1;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result_9 = 1;\n                                        }\n                                        switch (pattern_matching_result_9) {\n                                            case 0: {\n                                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\n                                            }\n                                            case 1: {\n                                                return void 0;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    catch (matchValue_4) {\n        return void 0;\n    }\n}\n\nexport const Interop_reactApi = react;\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\nimport { class_type } from \"../fable-library.3.1.11/Reflection.js\";\nimport { iterate } from \"../fable-library.3.1.11/Seq.js\";\nimport { defaultArg, some, toArray } from \"../fable-library.3.1.11/Option.js\";\nimport { Interop_reactApi } from \"./Interop.fs.js\";\nimport { curry, uncurry } from \"../fable-library.3.1.11/Util.js\";\nimport { useState } from \"react\";\nimport * as react from \"react\";\n\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\n\nexport const ReactInterop_useEffect = useEffect;\n\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\n\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\n\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\n\nexport class Internal {\n    constructor() {\n    }\n}\n\nexport function Internal$reflection() {\n    return class_type(\"Feliz.Internal\", void 0, Internal);\n}\n\nexport function Internal_$ctor() {\n    return new Internal();\n}\n\n(() => {\n})();\n\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\n    return (props) => Interop_reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\n}\n\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\n    iterate((name_1) => {\n        renderElement.displayName = name_1;\n    }, toArray(name));\n    return (props) => Interop_reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\n}\n\nfunction Internal_propsWithKey(withKey, props) {\n    if (withKey == null) {\n        return props;\n    }\n    else {\n        const f = withKey;\n        props.key = f(props);\n        return props;\n    }\n}\n\nexport class React {\n    constructor() {\n    }\n}\n\nexport function React$reflection() {\n    return class_type(\"Feliz.React\", void 0, React);\n}\n\nexport function React_createDisposable_3A5B6456(dispose) {\n    return {\n        Dispose() {\n            dispose();\n        },\n    };\n}\n\nexport function useReact_useState_FCFD9EF(initializer) {\n    return Interop_reactApi.useState(initializer);\n}\n\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\n    return Interop_reactApi.useReducer(update, initialState);\n}\n\nexport function useReact_useEffect_Z5ECA432F(effect) {\n    ReactInterop_useEffect(effect);\n}\n\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\n    ReactInterop_useLayoutEffect(effect);\n}\n\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\n}\n\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\n    ReactInterop_useLayoutEffect((_arg1) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useEffectOnce_3A5B6456(effect) {\n    useReact_useEffect_Z101E1A95(effect, []);\n}\n\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\n    useReact_useEffect_Z5234A374(effect, []);\n}\n\nexport function useReact_useEffectOnce_6E825304(effect) {\n    useReact_useEffect_Z5234A374(() => {\n        const disposeOption = effect();\n        return {\n            Dispose() {\n                iterate((d) => {\n                    let copyOfStruct = d;\n                    copyOfStruct.Dispose();\n                }, toArray(disposeOption));\n            },\n        };\n    }, []);\n}\n\nexport function useReact_useEffect_3A5B6456(effect) {\n    ReactInterop_useEffect((_arg3) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    });\n}\n\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\n    ReactInterop_useEffectWithDeps((_arg4) => {\n        effect();\n        return React_createDisposable_3A5B6456(() => {\n        });\n    }, dependencies);\n}\n\nexport function useReact_useDebugValue_Z721C83C5(value) {\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\n}\n\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\n}\n\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\n    return Interop_reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\n}\n\nexport function useReact_useRef_1505(initialValue) {\n    return Interop_reactApi.useRef(initialValue);\n}\n\nexport function useReact_useInputRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useButtonRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useElementRef() {\n    return useReact_useRef_1505(void 0);\n}\n\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\n    return Interop_reactApi.useMemo(createFunction, defaultArg(dependencies, []));\n}\n\nexport function React_functionComponent_2F9D7239(render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\n}\n\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\n}\n\nexport function React_functionComponent_19A12FB2(render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\n}\n\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\n}\n\nexport function React_memo_62A0F746(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\n}\n\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\n}\n\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\n}\n\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\n}\n\nexport function React_createContext_1AE444D8(name, defaultValue) {\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\n    iterate((name_1) => {\n        contextObject.displayName = name_1;\n    }, toArray(name));\n    return contextObject;\n}\n\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, child);\n}\n\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\n    return Interop_reactApi.createElement(contextObject.Provider, {\n        value: contextValue,\n    }, ...children);\n}\n\nexport function React_contextConsumer_Z68910595(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\n}\n\nexport function React_contextConsumer_56D53A40(contextObject, render) {\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\n}\n\nexport function useReact_useContext_37FA55CF(contextObject) {\n    return Interop_reactApi.useContext(contextObject);\n}\n\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\n    useReact_useLayoutEffect_3A5B6456(() => {\n        lastRenderCallbackRef.current = callback;\n    });\n    return callbackRef;\n}\n\nexport const React_useStateWithUpdater_1505 = useState;\n\nexport function React_forwardRef_3790D881(render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    return (tupledArg) => {\n        const propsObj = Object.assign({}, tupledArg[0]);\n        propsObj.ref = tupledArg[1];\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\n    };\n}\n\nexport function React_forwardRef_7DC3DB1A(name, render) {\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\n    render.displayName = name;\n    return (tupledArg) => {\n        const propsObj = Object.assign({}, tupledArg[0]);\n        propsObj.ref = tupledArg[1];\n        return Interop_reactApi.createElement(forwardRefType, propsObj);\n    };\n}\n\nexport function React_strictMode_6E3A73D(children) {\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\n}\n\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy((() => dynamicImport)), props);\n}\n\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\n}\n\nexport function React_suspense_6E3A73D(children) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: null,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function React_suspense_Z3796A576(children, fallback) {\n    let o;\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\n        fallback: fallback,\n    }, Object.assign({}, o)), ...children);\n}\n\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\n}\n\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\n}\n\nexport function useFeliz_React__React_useState_Static_1505(initial) {\n    return Interop_reactApi.useState(initial);\n}\n\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\n\n","import {\n    useEffect as useEffectReact,\n    useLayoutEffect as useLayoutEffectReact,\n    useDebugValue as useDebugValueReact } from 'react'\n\nexport const useEffect = getDisposable => {\n    useEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    })\n}\n\nexport const useEffectWithDeps = (getDisposable, deps) => {\n    useEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    }, deps)\n}\n\nexport const useLayoutEffect = getDisposable => {\n    useLayoutEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    })\n}\n\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\n    useLayoutEffectReact(() => {\n        const disposable = getDisposable()\n        return () => {\n            disposable.Dispose();\n        }\n    }, deps)\n}\n\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { class_type } from \"../fable-library.3.1.11/Reflection.js\";\nimport { defaultArg, value, some } from \"../fable-library.3.1.11/Option.js\";\nimport { isDisposable } from \"../fable-library.3.1.11/Util.js\";\nimport { ProgramModule_mkProgram, ProgramModule_withSetState, ProgramModule_runWith } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport { React_createDisposable_3A5B6456, useReact_useEffect_Z5234A374, useReact_useState_FCFD9EF } from \"../Feliz.1.64.0/React.fs.js\";\n\nclass ElmishObservable$2 {\n    constructor() {\n        this.hasDisposedOnce = false;\n        this.state = (void 0);\n        this.listener = (void 0);\n        this.dispatcher = (void 0);\n    }\n}\n\nfunction ElmishObservable$2$reflection(gen0, gen1) {\n    return class_type(\"Feliz.UseElmish.UseElmishExtensions.ElmishObservable`2\", [gen0, gen1], ElmishObservable$2);\n}\n\nfunction ElmishObservable$2_$ctor() {\n    return new ElmishObservable$2();\n}\n\nfunction ElmishObservable$2__get_Value(_) {\n    return _.state;\n}\n\nfunction ElmishObservable$2__get_HasDisposedOnce(_) {\n    return _.hasDisposedOnce;\n}\n\nfunction ElmishObservable$2__SetState(_, model, dispatch) {\n    _.state = some(model);\n    _.dispatcher = dispatch;\n    const matchValue = _.listener;\n    if (matchValue != null) {\n        matchValue(model);\n    }\n}\n\nfunction ElmishObservable$2__Dispatch_2B594(_, msg) {\n    const matchValue = _.dispatcher;\n    if (matchValue != null) {\n        matchValue(msg);\n    }\n}\n\nfunction ElmishObservable$2__Subscribe_5028453F(_, f) {\n    const matchValue = _.listener;\n    if (matchValue == null) {\n        _.listener = f;\n    }\n}\n\nfunction ElmishObservable$2__DisposeState(_) {\n    const matchValue = _.state;\n    if (matchValue != null) {\n        const matchValue_1 = value(matchValue);\n        if (isDisposable(matchValue_1)) {\n            matchValue_1.Dispose();\n        }\n    }\n    _.dispatcher = (void 0);\n    _.state = (void 0);\n    _.hasDisposedOnce = true;\n}\n\nfunction runProgram(program, arg, obs, unitVar3) {\n    ProgramModule_runWith(arg, ProgramModule_withSetState((arg00, arg10) => {\n        ElmishObservable$2__SetState(obs, arg00, arg10);\n    }, program()));\n    const matchValue = ElmishObservable$2__get_Value(obs);\n    if (matchValue != null) {\n        return value(matchValue);\n    }\n    else {\n        throw (new Error(\"Elmish program has not initialized\"));\n    }\n}\n\nexport function disposeState(state) {\n    const matchValue = state;\n    if (isDisposable(matchValue)) {\n        matchValue.Dispose();\n    }\n}\n\nexport function useFeliz_React__React_useElmish_Static_76E709(program, arg, dependencies) {\n    const obs = useReact_useState_FCFD9EF(ElmishObservable$2_$ctor)[0];\n    const patternInput_1 = useReact_useState_FCFD9EF(() => runProgram(program, arg, obs, void 0));\n    const setState = patternInput_1[1];\n    useReact_useEffect_Z5234A374(() => {\n        if (ElmishObservable$2__get_HasDisposedOnce(obs)) {\n            setState(runProgram(program, arg, obs, void 0));\n        }\n        return React_createDisposable_3A5B6456(() => {\n            ElmishObservable$2__DisposeState(obs);\n        });\n    }, defaultArg(dependencies, []));\n    ElmishObservable$2__Subscribe_5028453F(obs, setState);\n    return [patternInput_1[0], (arg00) => {\n        ElmishObservable$2__Dispatch_2B594(obs, arg00);\n    }];\n}\n\nexport function useFeliz_React__React_useElmish_Static_Z151674B(program, dependencies) {\n    return useFeliz_React__React_useElmish_Static_76E709(program, void 0, dependencies);\n}\n\nexport function useFeliz_React__React_useElmish_Static_Z4D826B22(init, update, arg, dependencies) {\n    return useFeliz_React__React_useElmish_Static_76E709(() => ProgramModule_mkProgram(init, update, (_arg2, _arg1) => {\n    }), arg, dependencies);\n}\n\nexport function useFeliz_React__React_useElmish_Static_B42E862(init, update, dependencies) {\n    return useFeliz_React__React_useElmish_Static_Z151674B(() => ProgramModule_mkProgram(init, update, (_arg4, _arg3) => {\n    }), dependencies);\n}\n\nexport function useFeliz_React__React_useElmish_Static_78C5B8C8(init, update, dependencies) {\n    return useFeliz_React__React_useElmish_Static_Z151674B(() => ProgramModule_mkProgram(() => init, update, (_arg6, _arg5) => {\n    }), dependencies);\n}\n\n","import { toString, Union, Record } from \"./.fable/fable-library.3.1.11/Types.js\";\nimport { union_type, string_type, record_type, bool_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\nimport { Cmd_ofSub, Cmd_OfFunc_result, Cmd_none } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { load } from \"js-yaml\";\nimport { fromValue } from \"./.fable/Thoth.Json.7.0.0/Decode.fs.js\";\nimport { uncurry } from \"./.fable/fable-library.3.1.11/Util.js\";\nimport { MinimalConfig_get_Decoder } from \"./ConfigDecoder.fs.js\";\nimport { useFeliz_React__React_useElmish_Static_B42E862 } from \"./.fable/Feliz.UseElmish.1.6.0/UseElmish.fs.js\";\nimport { createElement } from \"react\";\nimport { Interop_reactApi } from \"./.fable/Feliz.1.64.0/Interop.fs.js\";\n\nexport class State extends Record {\n    constructor(IsConfigLoaded) {\n        super();\n        this.IsConfigLoaded = IsConfigLoaded;\n    }\n}\n\nexport function State$reflection() {\n    return record_type(\"LoadConfig.State\", [], State, () => [[\"IsConfigLoaded\", bool_type]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"LoadConfig\", \"LoadConfigError\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"LoadConfig.Msg\", [], Msg, () => [[[\"Item\", string_type]], []]);\n}\n\nexport function init() {\n    return [new State(false), Cmd_none()];\n}\n\nexport function update(props, msg, state) {\n    if (msg.tag === 1) {\n        return [new State(false), Cmd_none()];\n    }\n    else {\n        const objConfig = load(msg.fields[0]);\n        const miniConfig = fromValue(\"$\", uncurry(2, MinimalConfig_get_Decoder()), objConfig);\n        if (miniConfig.tag === 1) {\n            return [new State(false), Cmd_OfFunc_result(new Msg(1))];\n        }\n        else {\n            return [new State(true), Cmd_ofSub((_arg1) => {\n                props.LoadConfig(miniConfig.fields[0]);\n            })];\n        }\n    }\n}\n\nexport function ConfigLoader(props) {\n    const dispatch = useFeliz_React__React_useElmish_Static_B42E862(init, (msg, state) => update(props, msg, state), [])[1];\n    return createElement(\"div\", {\n        className: \"center-screen\",\n        children: Interop_reactApi.Children.toArray([createElement(\"div\", {\n            className: \"file is-normal is-boxed\",\n            children: Interop_reactApi.Children.toArray([createElement(\"label\", {\n                className: \"file-label\",\n                children: Interop_reactApi.Children.toArray([createElement(\"input\", {\n                    className: \"file-input\",\n                    name: \"config\",\n                    type: \"file\",\n                    onInput: (ev) => {\n                        const file = ev.target.files[0];\n                        const reader = new FileReader();\n                        reader.onload = ((evt) => {\n                            dispatch(new Msg(0, toString(evt.target.result)));\n                        });\n                        reader.onerror = ((evt_1) => {\n                            dispatch(new Msg(1));\n                        });\n                        reader.readAsText(file);\n                    },\n                }), createElement(\"span\", {\n                    className: \"file-cta\",\n                    children: Interop_reactApi.Children.toArray([createElement(\"span\", {\n                        className: \"file-label\",\n                        children: \"Choose config.yaml\",\n                    })]),\n                })]),\n            })]),\n        })]),\n    });\n}\n\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","import { substring, endsWith } from \"./.fable/fable-library.3.1.11/String.js\";\nimport { tryParse } from \"./.fable/fable-library.3.1.11/Double.js\";\nimport { FSharpRef } from \"./.fable/fable-library.3.1.11/Types.js\";\n\nexport function $007CEndsWith$007C_$007C(expected, name) {\n    if (endsWith(name, expected, 1)) {\n        return true;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function $007CPrefix$007C_$007C(p, s) {\n    if (s.indexOf(p) === 0) {\n        return substring(s, p.length);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function parseFloat$(s) {\n    let matchValue;\n    let outArg = 0;\n    matchValue = [tryParse(s, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return matchValue[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { equals, toIterator, getEnumerator } from \"./Util.js\";\nimport { iterate, map, iterateIndexed, concat } from \"./Seq.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-1\"] = 1;\n        const enumerator = getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"Dictionary\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                void Dictionary__Remove_2B595(this$, item[0]);\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return map((p) => [p[0], p[1]], this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((p) => p[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return map((p) => p[1], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((p) => {\n            f(p[1], p[0], this$);\n        }, this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    let count = 0;\n    let enumerator = getEnumerator(this$.hashMap.values());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const pairs = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            count = ((count + pairs.length) | 0);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return count | 0;\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        return matchValue[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { toList, toArray, map, filter, delay } from \"./Seq.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { addToDict, getItemFromDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { getEnumerator } from \"./Util.js\";\nimport { FSharpRef } from \"./Types.js\";\n\nexport function distinct(xs, comparer) {\n    return delay(() => {\n        const hashSet = new HashSet([], comparer);\n        return filter((x) => addToSet(x, hashSet), xs);\n    });\n}\n\nexport function distinctBy(projection, xs, comparer) {\n    return delay(() => {\n        const hashSet = new HashSet([], comparer);\n        return filter((x) => addToSet(projection(x), hashSet), xs);\n    });\n}\n\nexport function except(itemsToExclude, xs, comparer) {\n    return delay(() => {\n        const hashSet = new HashSet(itemsToExclude, comparer);\n        return filter((x) => addToSet(x, hashSet), xs);\n    });\n}\n\nexport function countBy(projection, xs, comparer) {\n    return delay(() => {\n        const dict = new Dictionary([], comparer);\n        const keys = [];\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const key = projection(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                let matchValue;\n                let outArg = 0;\n                matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n                    outArg = v;\n                })), outArg];\n                if (matchValue[0]) {\n                    dict.set(key, matchValue[1] + 1);\n                }\n                else {\n                    dict.set(key, 1);\n                    void (keys.push(key));\n                }\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys);\n    });\n}\n\nexport function groupBy(projection, xs, comparer) {\n    return delay(() => {\n        const dict = new Dictionary([], comparer);\n        const keys = [];\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                const key = projection(x);\n                let matchValue;\n                let outArg = null;\n                matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n                    outArg = v;\n                })), outArg];\n                if (matchValue[0]) {\n                    void (matchValue[1].push(x));\n                }\n                else {\n                    addToDict(dict, key, [x]);\n                    void (keys.push(key));\n                }\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys);\n    });\n}\n\nexport function Array_distinct(xs, comparer) {\n    return toArray(distinct(xs, comparer));\n}\n\nexport function Array_distinctBy(projection, xs, comparer) {\n    return toArray(distinctBy(projection, xs, comparer));\n}\n\nexport function Array_except(itemsToExclude, xs, comparer) {\n    return toArray(except(itemsToExclude, xs, comparer));\n}\n\nexport function Array_countBy(projection, xs, comparer) {\n    return toArray(countBy(projection, xs, comparer));\n}\n\nexport function Array_groupBy(projection, xs, comparer) {\n    return toArray(map((tupledArg) => [tupledArg[0], toArray(tupledArg[1])], groupBy(projection, xs, comparer)));\n}\n\nexport function List_distinct(xs, comparer) {\n    return toList(distinct(xs, comparer));\n}\n\nexport function List_distinctBy(projection, xs, comparer) {\n    return toList(distinctBy(projection, xs, comparer));\n}\n\nexport function List_except(itemsToExclude, xs, comparer) {\n    return toList(except(itemsToExclude, xs, comparer));\n}\n\nexport function List_countBy(projection, xs, comparer) {\n    return toList(countBy(projection, xs, comparer));\n}\n\nexport function List_groupBy(projection, xs, comparer) {\n    return toList(map((tupledArg) => [tupledArg[0], toList(tupledArg[1])], groupBy(projection, xs, comparer)));\n}\n\n","import { Record } from \"./.fable/fable-library.3.1.11/Types.js\";\nimport { class_type, option_type, string_type, record_type, float64_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\nimport { toArray, map, singleton as singleton_1, append, empty } from \"./.fable/fable-library.3.1.11/List.js\";\nimport { singleton } from \"./.fable/fable-library.3.1.11/AsyncBuilder.js\";\nimport { fill, append as append_1, chunkBySize, mapIndexed, map as map_1, fold } from \"./.fable/fable-library.3.1.11/Array.js\";\nimport { parseFloat$, $007CPrefix$007C_$007C } from \"./Utils.fs.js\";\nimport { interpolate, toText, join, split } from \"./.fable/fable-library.3.1.11/String.js\";\nimport { FSharpMap__ContainsKey, FSharpMap__get_Item, ofArray } from \"./.fable/fable-library.3.1.11/Map.js\";\nimport { Array_groupBy } from \"./.fable/fable-library.3.1.11/Seq2.js\";\nimport { stringHash } from \"./.fable/fable-library.3.1.11/Util.js\";\n\nexport class Coordinates extends Record {\n    constructor(X, Y, OffsetX, OffsetY) {\n        super();\n        this.X = X;\n        this.Y = Y;\n        this.OffsetX = OffsetX;\n        this.OffsetY = OffsetY;\n    }\n}\n\nexport function Coordinates$reflection() {\n    return record_type(\"Data.Coordinates\", [], Coordinates, () => [[\"X\", float64_type], [\"Y\", float64_type], [\"OffsetX\", float64_type], [\"OffsetY\", float64_type]]);\n}\n\nexport class LabeledData extends Record {\n    constructor(FileName, Labels) {\n        super();\n        this.FileName = FileName;\n        this.Labels = Labels;\n    }\n}\n\nexport function LabeledData$reflection() {\n    return record_type(\"Data.LabeledData\", [], LabeledData, () => [[\"FileName\", string_type], [\"Labels\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, option_type(Coordinates$reflection())])])]]);\n}\n\nexport class CSVData {\n    constructor() {\n    }\n}\n\nexport function CSVData$reflection() {\n    return class_type(\"Data.CSVData\", void 0, CSVData);\n}\n\nexport function CSVData_AsyncDecode_Z721C83C5(csvFile) {\n    const initRecord = {\n        Bodyparts: new Array(0),\n        Files: empty(),\n        Individuals: new Array(0),\n        Scorers: new Array(0),\n    };\n    return singleton.Delay(() => {\n        const lines = fold((acc, x) => {\n            const activePatternResult14656 = $007CPrefix$007C_$007C(\"scorer,\", x);\n            if (activePatternResult14656 != null) {\n                const rest = activePatternResult14656;\n                return {\n                    Bodyparts: acc.Bodyparts,\n                    Files: acc.Files,\n                    Individuals: acc.Individuals,\n                    Scorers: split(rest, [\",\"], null, 0),\n                };\n            }\n            else {\n                const activePatternResult14654 = $007CPrefix$007C_$007C(\"individuals,\", x);\n                if (activePatternResult14654 != null) {\n                    const rest_1 = activePatternResult14654;\n                    return {\n                        Bodyparts: acc.Bodyparts,\n                        Files: acc.Files,\n                        Individuals: split(rest_1, [\",\"], null, 0),\n                        Scorers: acc.Scorers,\n                    };\n                }\n                else {\n                    const activePatternResult14652 = $007CPrefix$007C_$007C(\"bodyparts,\", x);\n                    if (activePatternResult14652 != null) {\n                        const rest_2 = activePatternResult14652;\n                        return {\n                            Bodyparts: split(rest_2, [\",\"], null, 0),\n                            Files: acc.Files,\n                            Individuals: acc.Individuals,\n                            Scorers: acc.Scorers,\n                        };\n                    }\n                    else if ($007CPrefix$007C_$007C(\"coords\", x) != null) {\n                        return acc;\n                    }\n                    else if (x === \"\") {\n                        return acc;\n                    }\n                    else {\n                        return {\n                            Bodyparts: acc.Bodyparts,\n                            Files: append(acc.Files, singleton_1(x)),\n                            Individuals: acc.Individuals,\n                            Scorers: acc.Scorers,\n                        };\n                    }\n                }\n            }\n        }, initRecord, csvFile.split(\"\\n\"));\n        return singleton.Return(map((x_1) => {\n            const values = split(x_1, [\",\"], null, 0);\n            return new LabeledData(values[0], ofArray(map_1((tupledArg) => [tupledArg[0], ofArray(map_1((l) => [l.Bodypart, l.Coordinates], tupledArg[1]))], Array_groupBy((x_4) => x_4.Individual, mapIndexed((i, x_3) => ({\n                Bodypart: lines.Bodyparts[i * 2],\n                Coordinates: x_3,\n                Individual: lines.Individuals[i * 2],\n                Scorer: lines.Scorers[i * 2],\n            }), map_1((pair) => {\n                const matchValue = [parseFloat$(pair[0]), parseFloat$(pair[1])];\n                let pattern_matching_result, x_2, y;\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        pattern_matching_result = 0;\n                        x_2 = matchValue[0];\n                        y = matchValue[1];\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n                switch (pattern_matching_result) {\n                    case 0: {\n                        return new Coordinates(x_2, y, 0, 0);\n                    }\n                    case 1: {\n                        return void 0;\n                    }\n                }\n            }, chunkBySize(2, values.slice(1, values.length + 1)))), {\n                Equals: (x_5, y_1) => (x_5 === y_1),\n                GetHashCode: (x_5) => stringHash(x_5),\n            }))));\n        }, lines.Files));\n    });\n}\n\nexport function CSVData_AsyncEncode(config, data) {\n    return singleton.Delay(() => {\n        let array2_10;\n        const bodyparts = config.Multianimalbodyparts;\n        const individuals = config.Individuals;\n        return singleton.Return(join(\"\\n\", (array2_10 = map_1((d) => join(\",\", append_1([d.FileName], map_1((c) => {\n            if (c == null) {\n                return \",\";\n            }\n            else {\n                const c_1 = c;\n                return toText(interpolate(\"%f%P(),%f%P()\", [c_1.X + c_1.OffsetX, c_1.Y + c_1.OffsetY]));\n            }\n        }, map_1((i) => {\n            const group = FSharpMap__get_Item(d.Labels, i);\n            return map_1((b) => {\n                if (FSharpMap__ContainsKey(group, b)) {\n                    return FSharpMap__get_Item(group, b);\n                }\n                else {\n                    return void 0;\n                }\n            }, bodyparts);\n        }, individuals).reduce((array1_8, array2_8) => append_1(array1_8, array2_8))))), toArray(data).filter((x_2) => (x_2.FileName.length > 0))), append_1([join(\",\", append_1([\"scorer\"], fill(new Array((individuals.length * bodyparts.length) * 2), 0, (individuals.length * bodyparts.length) * 2, config.Scorer))), join(\",\", append_1([\"individuals\"], map_1((x) => fill(new Array(bodyparts.length * 2), 0, bodyparts.length * 2, x), individuals).reduce((array1_1, array2_1) => append_1(array1_1, array2_1)))), join(\",\", append_1([\"bodyparts\"], map_1((_arg1) => map_1((x_1) => [x_1, x_1], bodyparts).reduce((array1_3, array2_3) => append_1(array1_3, array2_3)), individuals).reduce((array1_4, array2_4) => append_1(array1_4, array2_4)))), join(\",\", append_1([\"coords\"], fill(new Array(individuals.length * bodyparts.length), 0, individuals.length * bodyparts.length, [\"x\", \"y\"]).reduce((array1_6, array2_6) => append_1(array1_6, array2_6))))], array2_10))));\n    });\n}\n\n","import { reverse, empty, cons, fold } from \"../fable-library.3.1.11/List.js\";\nimport { uncurry } from \"../fable-library.3.1.11/Util.js\";\nimport { toString } from \"../fable-library.3.1.11/Types.js\";\nimport { join } from \"../fable-library.3.1.11/String.js\";\n\nexport function Helpers_extractClasses(xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const classes = tupledArg[0];\n        const props = tupledArg[1];\n        return (x) => {\n            const matchValue = x;\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\n        };\n    }), [empty(), empty()], reverse(xs));\n}\n\nexport function Helpers_combineClasses(cn, xs) {\n    const tupledArg = Helpers_extractClasses(xs);\n    return cons([\"className\", join(\" \", cons(cn, tupledArg[0]))], tupledArg[1]);\n}\n\n","import { bind, map } from \"../fable-library.3.1.11/Option.js\";\n\nexport const Impl_allowsPassiveEvents = (() => {\n    let passive = false;\n    try {\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\n            }, {\n                passive: true,\n            });\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\n            });\n        }\n    }\n    catch (matchValue) {\n    }\n    return passive;\n})();\n\nexport const Impl_defaultPassive = {\n    passive: true,\n};\n\nexport function Impl_adjustPassive(maybeOptions) {\n    return map((options) => {\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\n            return {\n                capture: options.capture,\n                once: options.once,\n                passive: false,\n            };\n        }\n        else {\n            return options;\n        }\n    }, maybeOptions);\n}\n\nexport function Impl_createRemoveOptions(maybeOptions) {\n    return bind((options) => {\n        if (options.capture) {\n            return {\n                capture: true,\n            };\n        }\n        else {\n            return void 0;\n        }\n    }, maybeOptions);\n}\n\n","import { Union, Record } from \"./.fable/fable-library.3.1.11/Types.js\";\nimport { union_type, tuple_type, option_type, list_type, bool_type, float64_type, record_type, class_type, string_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\nimport { MinimalConfig, MinimalConfig__get_IndividualColors, MinimalConfig__get_BodyColors, MinimalConfig$reflection } from \"./ConfigDecoder.fs.js\";\nimport { CSVData_AsyncEncode, CSVData_AsyncDecode_Z721C83C5, Coordinates, LabeledData, Coordinates$reflection, LabeledData$reflection } from \"./LabeledData.fs.js\";\nimport { cons, singleton, append, sortBy, isEmpty, map as map_1, find, ofArray, empty } from \"./.fable/fable-library.3.1.11/List.js\";\nimport { Cmd_OfAsync_start, Cmd_OfAsyncWith_either, Cmd_ofSub, Cmd_OfFunc_result, Cmd_batch, Cmd_none } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { toArray as toArray_1, value as value_192, some } from \"./.fable/fable-library.3.1.11/Option.js\";\nimport * as panzoom from \"panzoom\";\nimport { $007CEndsWith$007C_$007C } from \"./Utils.fs.js\";\nimport { containsKey, toArray as toArray_2, add, change, FSharpMap__get_Item, FSharpMap__Remove, FSharpMap__Add, FSharpMap__ContainsKey } from \"./.fable/fable-library.3.1.11/Map.js\";\nimport { replace, join, toConsole, printf, interpolate, toText } from \"./.fable/fable-library.3.1.11/String.js\";\nimport { round, createObj, safeHash, equals, comparePrimitives } from \"./.fable/fable-library.3.1.11/Util.js\";\nimport { mapIndexed, pairwise, concat, append as append_1, choose, reverse, map as map_2 } from \"./.fable/fable-library.3.1.11/Array.js\";\nimport { empty as empty_1, singleton as singleton_1, append as append_2, delay, toList, map as map_3, contains, toArray } from \"./.fable/fable-library.3.1.11/Seq.js\";\nimport { rangeDouble } from \"./.fable/fable-library.3.1.11/Range.js\";\nimport { Interop_reactApi } from \"./.fable/Feliz.1.64.0/Interop.fs.js\";\nimport { createElement } from \"react\";\nimport { Helpers_extractClasses, Helpers_combineClasses } from \"./.fable/Feliz.Bulma.2.18.0/ElementBuilders.fs.js\";\nimport { getItemFromDict } from \"./.fable/fable-library.3.1.11/MapUtil.js\";\nimport react$002Ddraggable from \"react-draggable\";\nimport { useFeliz_React__React_useElmish_Static_78C5B8C8 } from \"./.fable/Feliz.UseElmish.1.6.0/UseElmish.fs.js\";\nimport { React_createDisposable_3A5B6456, useReact_useCallbackRef_7C4B0DD6, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67 } from \"./.fable/Feliz.1.64.0/React.fs.js\";\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"./.fable/Feliz.UseListener.0.6.3/Listener.fs.js\";\n\nexport class ProjectFile extends Record {\n    constructor(FileName, ImageBlob, DisplayUrl) {\n        super();\n        this.FileName = FileName;\n        this.ImageBlob = ImageBlob;\n        this.DisplayUrl = DisplayUrl;\n    }\n}\n\nexport function ProjectFile$reflection() {\n    return record_type(\"Labeling.ProjectFile\", [], ProjectFile, () => [[\"FileName\", string_type], [\"ImageBlob\", class_type(\"Browser.Types.Blob\")], [\"DisplayUrl\", string_type]]);\n}\n\nexport class LabelDrag extends Record {\n    constructor(Individual, Bodypart, X, Y) {\n        super();\n        this.Individual = Individual;\n        this.Bodypart = Bodypart;\n        this.X = X;\n        this.Y = Y;\n    }\n}\n\nexport function LabelDrag$reflection() {\n    return record_type(\"Labeling.LabelDrag\", [], LabelDrag, () => [[\"Individual\", string_type], [\"Bodypart\", string_type], [\"X\", float64_type], [\"Y\", float64_type]]);\n}\n\nexport class ImageTransformation extends Record {\n    constructor(X, Y, Scale) {\n        super();\n        this.X = X;\n        this.Y = Y;\n        this.Scale = Scale;\n    }\n}\n\nexport function ImageTransformation$reflection() {\n    return record_type(\"Labeling.ImageTransformation\", [], ImageTransformation, () => [[\"X\", float64_type], [\"Y\", float64_type], [\"Scale\", float64_type]]);\n}\n\nexport class State extends Record {\n    constructor(Config, ShowQuickView, LoadedImages, LabeledData, SelectedImage, SelectedLabel, ImageTransformation, PanZoom, ErrorMessage) {\n        super();\n        this.Config = Config;\n        this.ShowQuickView = ShowQuickView;\n        this.LoadedImages = LoadedImages;\n        this.LabeledData = LabeledData;\n        this.SelectedImage = SelectedImage;\n        this.SelectedLabel = SelectedLabel;\n        this.ImageTransformation = ImageTransformation;\n        this.PanZoom = PanZoom;\n        this.ErrorMessage = ErrorMessage;\n    }\n}\n\nexport function State$reflection() {\n    return record_type(\"Labeling.State\", [], State, () => [[\"Config\", MinimalConfig$reflection()], [\"ShowQuickView\", bool_type], [\"LoadedImages\", list_type(ProjectFile$reflection())], [\"LabeledData\", list_type(LabeledData$reflection())], [\"SelectedImage\", option_type(ProjectFile$reflection())], [\"SelectedLabel\", tuple_type(string_type, string_type)], [\"ImageTransformation\", ImageTransformation$reflection()], [\"PanZoom\", option_type(class_type(\"panzoom.PanZoom.PanZoom\"))], [\"ErrorMessage\", option_type(string_type)]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AddPanZoom\", \"ToggleQuickView\", \"EmptyState\", \"ImageLoaded\", \"CSVLoaded\", \"SelectImage\", \"DisplayLabels\", \"OnImageTransform\", \"OnLabelDrag\", \"OnLabelDragStart\", \"OnLabelDragStop\", \"OnLabelSelected\", \"OnDeleteAnnotation\", \"OnNewAnnotation\", \"OnConfigUpdate\", \"CreatePanZoom\", \"GenerateCSV\", \"SaveCSV\", \"LogError\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Labeling.Msg\", [], Msg, () => [[], [], [], [[\"Item\", ProjectFile$reflection()]], [[\"Item\", string_type]], [[\"Item\", ProjectFile$reflection()]], [[\"Item\", list_type(LabeledData$reflection())]], [[\"Item\", ImageTransformation$reflection()]], [[\"Item\", LabelDrag$reflection()]], [], [], [[\"Item\", tuple_type(string_type, string_type)]], [[\"Item\", tuple_type(string_type, string_type)]], [[\"Item\", tuple_type(string_type, string_type, option_type(Coordinates$reflection()))]], [[\"Item\", MinimalConfig$reflection()]], [[\"Item\", class_type(\"panzoom.PanZoom.PanZoom\")]], [], [[\"Item\", string_type]], [[\"Item\", class_type(\"System.Exception\")]]]);\n}\n\nexport function emptyState(config) {\n    return new State(config, false, empty(), empty(), void 0, [config.Individuals[0], config.Multianimalbodyparts[0]], new ImageTransformation(0, 0, 1), void 0, void 0);\n}\n\nexport function init(props) {\n    return [emptyState(props.Config), Cmd_none()];\n}\n\nexport function onPanZoom(pz, dispatch) {\n    pz.on(\"transform\", (e) => {\n        const t = e.getTransform();\n        dispatch(new Msg(7, new ImageTransformation(t.x, t.y, t.scale)));\n    });\n}\n\nexport function selectLoadedFile(state, file) {\n    const matchValue = state.SelectedImage;\n    if (matchValue == null) {\n        const element = document.getElementById(\"canvasImage\");\n        const options = {\n            bounds: some(true),\n            boundsPadding: 1,\n            maxZoom: 5,\n            minZoom: 1,\n        };\n        const pz = panzoom(element, options);\n        return Cmd_batch(ofArray([Cmd_OfFunc_result(new Msg(5, file)), Cmd_OfFunc_result(new Msg(15, pz)), Cmd_ofSub((dispatch) => {\n            onPanZoom(pz, dispatch);\n        })]));\n    }\n    else {\n        const file_1 = matchValue;\n        return Cmd_none();\n    }\n}\n\nexport function deleteSeletedLabel(state, label_0, label_1) {\n    const label = [label_0, label_1];\n    const matchValue = state.SelectedImage;\n    if (matchValue == null) {\n        return state.LabeledData;\n    }\n    else {\n        const file = matchValue;\n        const i = label[0];\n        const grouped = find((x) => {\n            if ($007CEndsWith$007C_$007C(file.FileName, x.FileName) != null) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }, state.LabeledData);\n        if (FSharpMap__ContainsKey(grouped.Labels, i)) {\n            const newLabels = FSharpMap__Add(grouped.Labels, i, FSharpMap__Remove(FSharpMap__get_Item(grouped.Labels, i), label[1]));\n            return map_1((x_1) => {\n                if ($007CEndsWith$007C_$007C(file.FileName, x_1.FileName) != null) {\n                    const circle = document.getElementById(toText(interpolate(\"%s%P().%s%P()\", [label[0], label[1]])));\n                    circle.removeAttribute(\"transform\");\n                    circle.removeAttribute(\"class\");\n                    return new LabeledData(x_1.FileName, newLabels);\n                }\n                else {\n                    return x_1;\n                }\n            }, state.LabeledData);\n        }\n        else {\n            return state.LabeledData;\n        }\n    }\n}\n\nexport function download(fileName, fileContent) {\n    const anchor = document.createElement(\"a\");\n    anchor.setAttribute(\"href\", encodeURI(toText(printf(\"data:text/csv;charset=utf-8,%s\"))(fileContent)));\n    anchor.setAttribute(\"download\", fileName);\n    anchor.click();\n}\n\nexport function findLabels(selectedImage, labeledData, map) {\n    if (selectedImage == null) {\n        return labeledData;\n    }\n    else {\n        const image = selectedImage;\n        if (isEmpty(labeledData)) {\n            return labeledData;\n        }\n        else {\n            return map_1((x) => {\n                if ($007CEndsWith$007C_$007C(image.FileName, x.FileName) != null) {\n                    return map(x);\n                }\n                else {\n                    return x;\n                }\n            }, labeledData);\n        }\n    }\n}\n\nexport function updateLabeledData(selectedImage, labeledData, drag) {\n    return findLabels(selectedImage, labeledData, (x) => {\n        let labels, drag_1, newValue;\n        return new LabeledData(x.FileName, (labels = x.Labels, (drag_1 = drag, (newValue = change(drag_1.Bodypart, (b) => {\n            let pattern_matching_result, c;\n            if (b != null) {\n                if (value_192(b) != null) {\n                    pattern_matching_result = 0;\n                    c = value_192(b);\n                }\n                else {\n                    pattern_matching_result = 1;\n                }\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n            switch (pattern_matching_result) {\n                case 0: {\n                    toConsole(printf(\"coordinates = %A,\\ndeltaDrag = %A\"))(c)(drag_1);\n                    return some(new Coordinates(c.X, c.Y, c.OffsetX + drag_1.X, c.OffsetY + drag_1.Y));\n                }\n                case 1: {\n                    return void 0;\n                }\n            }\n        }, FSharpMap__get_Item(labels, drag_1.Individual)), change(drag_1.Individual, (i) => {\n            if (i == null) {\n                return void 0;\n            }\n            else {\n                const i_1 = i;\n                return newValue;\n            }\n        }, labels)))));\n    });\n}\n\nexport function addNewLabeledData(selectedImage, labeledData, newLabel_0, newLabel_1, newLabel_2) {\n    const newLabel = [newLabel_0, newLabel_1, newLabel_2];\n    return findLabels(selectedImage, labeledData, (x) => {\n        const individual_1 = newLabel[0];\n        const bodypart_1 = newLabel[1];\n        let newLabels;\n        const labels = x.Labels;\n        const tupledArg = newLabel;\n        const individual = tupledArg[0];\n        newLabels = add(individual, add(tupledArg[1], tupledArg[2], FSharpMap__get_Item(labels, individual)), labels);\n        if (FSharpMap__ContainsKey(x.Labels, individual_1)) {\n            if (FSharpMap__ContainsKey(FSharpMap__get_Item(x.Labels, individual_1), bodypart_1)) {\n                const matchValue_2 = FSharpMap__get_Item(FSharpMap__get_Item(x.Labels, individual_1), bodypart_1);\n                if (matchValue_2 == null) {\n                    return new LabeledData(x.FileName, newLabels);\n                }\n                else {\n                    const b = matchValue_2;\n                    return x;\n                }\n            }\n            else {\n                return new LabeledData(x.FileName, newLabels);\n            }\n        }\n        else {\n            return new LabeledData(x.FileName, newLabels);\n        }\n    });\n}\n\nexport function update(props, msg, state) {\n    switch (msg.tag) {\n        case 1: {\n            return [new State(state.Config, !state.ShowQuickView, state.LoadedImages, state.LabeledData, state.SelectedImage, state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 2: {\n            return [emptyState(state.Config), Cmd_none()];\n        }\n        case 3: {\n            const file = msg.fields[0];\n            return [new State(state.Config, state.ShowQuickView, sortBy((x) => x.FileName, append(singleton(file), state.LoadedImages), {\n                Compare: (x_1, y) => comparePrimitives(x_1, y),\n            }), state.LabeledData, state.SelectedImage, state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), selectLoadedFile(state, file)];\n        }\n        case 4: {\n            return [state, Cmd_OfAsyncWith_either((x_2) => {\n                Cmd_OfAsync_start(x_2);\n            }, (arg00) => CSVData_AsyncDecode_Z721C83C5(arg00), msg.fields[0], (arg0) => (new Msg(6, arg0)), (arg0_1) => (new Msg(18, arg0_1)))];\n        }\n        case 5: {\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, state.LabeledData, msg.fields[0], state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 6: {\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, msg.fields[0], state.SelectedImage, state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 7: {\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, state.LabeledData, state.SelectedImage, state.SelectedLabel, msg.fields[0], state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 8: {\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, updateLabeledData(state.SelectedImage, state.LabeledData, msg.fields[0]), state.SelectedImage, state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 9: {\n            const matchValue = state.PanZoom;\n            if (matchValue == null) {\n                const value = toConsole(printf(\"no panzoom\"));\n            }\n            else {\n                const pz = matchValue;\n                toConsole(printf(\"- pz pause\"));\n                pz.pause();\n            }\n            return [state, Cmd_none()];\n        }\n        case 10: {\n            const matchValue_1 = state.PanZoom;\n            if (matchValue_1 == null) {\n                const value_1 = toConsole(printf(\"no panzoom\"));\n            }\n            else {\n                const pz_1 = matchValue_1;\n                toConsole(printf(\"+ pz resume\"));\n                pz_1.resume();\n            }\n            return [state, Cmd_none()];\n        }\n        case 11: {\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, state.LabeledData, state.SelectedImage, msg.fields[0], state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 12: {\n            const selectedLabel_1 = msg.fields[0];\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, deleteSeletedLabel(state, selectedLabel_1[0], selectedLabel_1[1]), state.SelectedImage, state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 13: {\n            const newLabel = msg.fields[0];\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, addNewLabeledData(state.SelectedImage, state.LabeledData, newLabel[0], newLabel[1], newLabel[2]), state.SelectedImage, state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 14: {\n            return [new State(msg.fields[0], state.ShowQuickView, state.LoadedImages, state.LabeledData, state.SelectedImage, state.SelectedLabel, state.ImageTransformation, state.PanZoom, state.ErrorMessage), Cmd_none()];\n        }\n        case 15: {\n            return [new State(state.Config, state.ShowQuickView, state.LoadedImages, state.LabeledData, state.SelectedImage, state.SelectedLabel, state.ImageTransformation, msg.fields[0], state.ErrorMessage), Cmd_none()];\n        }\n        case 16: {\n            return [state, Cmd_OfAsyncWith_either((x_3) => {\n                Cmd_OfAsync_start(x_3);\n            }, (arg10) => CSVData_AsyncEncode(state.Config, arg10), state.LabeledData, (arg0_2) => (new Msg(17, arg0_2)), (arg0_3) => (new Msg(18, arg0_3)))];\n        }\n        case 17: {\n            download(toText(interpolate(\"CollectedData_%s%P().csv\", [state.Config.Scorer])), msg.fields[0]);\n            return [state, Cmd_none()];\n        }\n        case 18: {\n            const arg10_1 = msg.fields[0].message;\n            toConsole(printf(\"Error: %s\"))(arg10_1);\n            return [state, Cmd_none()];\n        }\n        default: {\n            return [state, Cmd_none()];\n        }\n    }\n}\n\nexport function loadFile(dispatch, fileName, blob) {\n    const reader = new FileReader();\n    if ($007CEndsWith$007C_$007C(\".png\", fileName) != null) {\n        reader.onload = ((ev) => {\n            dispatch(new Msg(3, new ProjectFile(fileName, blob, ev.target.result)));\n        });\n        reader.readAsDataURL(blob);\n    }\n    else if ($007CEndsWith$007C_$007C(\".csv\", fileName) != null) {\n        reader.onload = ((ev_1) => {\n            dispatch(new Msg(4, ev_1.target.result));\n        });\n        reader.readAsText(blob);\n    }\n}\n\nexport function loadProjectFiles(dispatch, fileEvent) {\n    const fileList = fileEvent.target.files;\n    map_2((arg_1) => {\n        const x = fileList.item(arg_1);\n        return [x.name, x.slice()];\n    }, reverse(toArray(rangeDouble(0, 1, fileList.length - 1))).filter((arg) => {\n        const matchValue = fileList.item(arg).name;\n        if ($007CEndsWith$007C_$007C(\".png\", matchValue) != null) {\n            return true;\n        }\n        else if ($007CEndsWith$007C_$007C(\".csv\", matchValue) != null) {\n            return true;\n        }\n        else if ($007CEndsWith$007C_$007C(\".h5\", matchValue) != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    })).forEach((tupledArg) => {\n        loadFile(dispatch, tupledArg[0], tupledArg[1]);\n    });\n}\n\nexport function getFileDisplayUrl(file) {\n    if (file == null) {\n        return \"https://bulma.io/images/placeholders/1280x960.png\";\n    }\n    else {\n        return file.DisplayUrl;\n    }\n}\n\nexport function getFileName(file) {\n    if (file == null) {\n        return \"placeholder\";\n    }\n    else {\n        return file.FileName;\n    }\n}\n\nexport function selectedBorder(state, file) {\n    if (contains(file, toArray_1(state.SelectedImage), {\n        Equals: (x, y) => equals(x, y),\n        GetHashCode: (x) => safeHash(x),\n    })) {\n        return [\"style\", {\n            border: (((3 + \"px \") + \"solid\") + \" \") + \"hsl(171, 100%, 41%)\",\n            borderRadius: 2,\n        }];\n    }\n    else {\n        return [\"style\", {\n            border: (((3 + \"px \") + \"solid\") + \" \") + \"transparent\",\n        }];\n    }\n}\n\nexport function miniViews(state, dispathc) {\n    return map_3((x) => {\n        let props_1;\n        const props_3 = ofArray([[\"className\", \"is-2\"], [\"children\", Interop_reactApi.Children.toArray([(props_1 = ofArray([selectedBorder(state, x), [\"children\", Interop_reactApi.Children.toArray([createElement(\"img\", {\n            src: x.DisplayUrl,\n            onClick: (_arg1) => {\n                dispathc(new Msg(5, x));\n            },\n        })])]]), createElement(\"figure\", createObj(Helpers_combineClasses(\"image\", props_1))))])]]);\n        return createElement(\"div\", createObj(Helpers_combineClasses(\"column\", props_3)));\n    }, state.LoadedImages);\n}\n\nexport function getSvgCircle(dispatch, transform, individual, bodypart, coordinate, config) {\n    let content;\n    const circle = createElement(\"circle\", {\n        style: {\n            position: \"static\",\n        },\n        children: Interop_reactApi.Children.toArray([(content = toText(interpolate(\"%s%P()\\n%s%P()\", [individual, bodypart])), createElement(\"title\", {\n            children: [content],\n        }))]),\n        cx: coordinate.X,\n        cy: coordinate.Y,\n        fill: getItemFromDict(MinimalConfig__get_BodyColors(config), bodypart),\n        fillOpacity: config.Alphavalue,\n        id: toText(interpolate(\"%s%P().%s%P()\", [individual, bodypart])),\n        onClick: (_arg1) => {\n            dispatch(new Msg(11, [individual, bodypart]));\n        },\n        r: config.Dotsize,\n        stroke: getItemFromDict(MinimalConfig__get_IndividualColors(config), individual),\n        strokeWidth: 3,\n    });\n    const image = document.getElementById(\"canvasImage\");\n    const scale = (image.clientWidth / image.naturalWidth) * transform.Scale;\n    return Interop_reactApi.createElement(react$002Ddraggable, createObj(ofArray([[\"children\", circle], [\"scale\", scale], [\"onDrag\", ((_arg2, d) => {\n        dispatch(new Msg(8, new LabelDrag(individual, bodypart, d.deltaX, d.deltaY)));\n    })], [\"onStart\", ((_arg4, _arg3) => {\n        toConsole(printf(\"+ drag started\"));\n        dispatch(new Msg(9));\n    })], [\"onStop\", ((c, d_1) => {\n        toConsole(printf(\"- drag stopped\"));\n        dispatch(new Msg(10));\n    })]])));\n}\n\nexport function getSvgLine(c1, c2, strokeColor, opacity) {\n    return createElement(\"line\", {\n        x1: c1.X + c1.OffsetX,\n        y1: c1.Y + c1.OffsetY,\n        x2: c2.X + c2.OffsetX,\n        y2: c2.Y + c2.OffsetY,\n        stroke: strokeColor,\n        strokeOpacity: opacity,\n        strokeWidth: 2,\n    });\n}\n\nexport function svgElements(dispatch, transform, config, labeledData, selectedImage) {\n    if (selectedImage == null) {\n        return [null];\n    }\n    else {\n        const image = selectedImage;\n        if (isEmpty(labeledData)) {\n            return [null];\n        }\n        else {\n            const grouped = find((x) => {\n                if ($007CEndsWith$007C_$007C(image.FileName, x.FileName) != null) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }, labeledData);\n            const circles = map_2((tupledArg) => choose((tupledArg_1) => {\n                const c = tupledArg_1[1];\n                if (c != null) {\n                    return getSvgCircle(dispatch, transform, tupledArg[0], tupledArg_1[0], c, config);\n                }\n                else {\n                    return void 0;\n                }\n            }, toArray_2(tupledArg[1])), toArray_2(grouped.Labels)).reduce((array1, array2) => append_1(array1, array2));\n            return concat([map_2((i_1) => {\n                const individual = FSharpMap__get_Item(grouped.Labels, i_1);\n                return map_2((xs) => choose((tupledArg_2) => {\n                    const matchValue_2 = [tupledArg_2[0], tupledArg_2[1]];\n                    let pattern_matching_result, c1_1, c2_1;\n                    if (matchValue_2[0] != null) {\n                        if (matchValue_2[1] != null) {\n                            pattern_matching_result = 0;\n                            c1_1 = matchValue_2[0];\n                            c2_1 = matchValue_2[1];\n                        }\n                        else {\n                            pattern_matching_result = 1;\n                        }\n                    }\n                    else {\n                        pattern_matching_result = 1;\n                    }\n                    switch (pattern_matching_result) {\n                        case 0: {\n                            return getSvgLine(c1_1, c2_1, \"grey\", 0.9);\n                        }\n                        case 1: {\n                            return void 0;\n                        }\n                    }\n                }, pairwise(map_2((x_2) => {\n                    if (containsKey(x_2, individual)) {\n                        return FSharpMap__get_Item(individual, x_2);\n                    }\n                    else {\n                        return void 0;\n                    }\n                }, xs))), config.Skeleton).reduce((array1_1, array2_1) => append_1(array1_1, array2_1));\n            }, config.Individuals).reduce((array1_2, array2_2) => append_1(array1_2, array2_2)), circles]);\n        }\n    }\n}\n\nexport function LabelingCanvas(props) {\n    let props_28, elms_2, elms_1, elms, elms_10, elms_5, props_15, elms_4, elms_3, elms_9, elms_8, elms_7, elms_6, props_21, props_45, elms_18, props_58, elms_16, elms_15, props_47, props_51, props_54, props_76, children_21, patternInput_4, children_23;\n    const patternInput = useFeliz_React__React_useElmish_Static_78C5B8C8(init(props), (msg, state) => update(props, msg, state), []);\n    const state_1 = patternInput[0];\n    const dispatch = patternInput[1];\n    const eventType = \"keydown\";\n    const action_1 = (ev) => {\n        const matchValue = ev.key;\n        switch (matchValue) {\n            case \"Backspace\":\n            case \"Delete\": {\n                dispatch(new Msg(12, state_1.SelectedLabel));\n                break;\n            }\n            default: {\n                toConsole(printf(\"%s\"))(matchValue);\n            }\n        }\n    };\n    const options_1 = void 0;\n    const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\n    const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\n    const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\n        action_1(arg);\n    }), [action_1]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n        if (addOptions == null) {\n            document.addEventListener(eventType, fn);\n        }\n        else {\n            document.addEventListener(eventType, fn, addOptions);\n        }\n        return React_createDisposable_3A5B6456(() => {\n            if (removeOptions == null) {\n                document.removeEventListener(eventType, fn);\n            }\n            else {\n                document.removeEventListener(eventType, fn, removeOptions);\n            }\n        });\n    }));\n    const eventType_1 = \"contextmenu\";\n    const action_3 = (ev_1) => {\n        ev_1.preventDefault();\n    };\n    const options_5 = void 0;\n    const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\n    const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\n    const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\n        action_3(arg_1);\n    }), [action_3]);\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\n        if (addOptions_1 == null) {\n            document.addEventListener(eventType_1, fn_1);\n        }\n        else {\n            document.addEventListener(eventType_1, fn_1, addOptions_1);\n        }\n        return React_createDisposable_3A5B6456(() => {\n            if (removeOptions_1 == null) {\n                document.removeEventListener(eventType_1, fn_1);\n            }\n            else {\n                document.removeEventListener(eventType_1, fn_1, removeOptions_1);\n            }\n        });\n    }));\n    const children_27 = ofArray([(props_28 = ofArray([[\"className\", \"is-primary\"], [\"children\", Interop_reactApi.Children.toArray([(elms_2 = singleton((elms_1 = singleton((elms = singleton(createElement(\"i\", {\n        className: \"fas fa-draw-polygon fa-2x\",\n    })), createElement(\"span\", {\n        className: \"icon\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\n    }))), createElement(\"a\", {\n        className: \"navbar-item\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_1)),\n    }))), createElement(\"div\", {\n        className: \"navbar-brand\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_2)),\n    })), (elms_10 = ofArray([(elms_5 = ofArray([(props_15 = ofArray([[\"className\", \"has-dropdown\"], [\"className\", \"is-hoverable\"], [\"children\", Interop_reactApi.Children.toArray([createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-link\", singleton([\"children\", \"File\"])))), (elms_4 = ofArray([(elms_3 = ofArray([createElement(\"p\", {\n        children: [\"Load image folder\"],\n    }), createElement(\"input\", {\n        webkitdirectory: \"true\",\n        type: \"file\",\n        className: \"file-input\",\n        onChange: (ev_2) => {\n            dispatch(new Msg(2));\n            loadProjectFiles(dispatch, ev_2);\n        },\n    })]), createElement(\"a\", {\n        className: \"navbar-item\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_3)),\n    })), createElement(\"hr\", createObj(Helpers_combineClasses(\"navbar-divider\", empty()))), createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-item\", ofArray([[\"children\", \"Save\"], [\"onClick\", (_arg1) => {\n        dispatch(new Msg(16));\n    }]]))))]), createElement(\"div\", {\n        className: \"navbar-dropdown\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_4)),\n    }))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"navbar-item\", props_15)))), createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-item\", singleton([\"children\", \"Documentation\"]))))]), createElement(\"div\", {\n        className: \"navbar-start\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_5)),\n    })), (elms_9 = singleton((elms_8 = singleton((elms_7 = singleton((elms_6 = singleton((props_21 = ofArray([[\"onClick\", (_arg2) => {\n        dispatch(new Msg(1));\n    }], [\"children\", Interop_reactApi.Children.toArray([createElement(\"i\", {\n        className: \"fas fa-cogs\",\n    })])]]), createElement(\"span\", createObj(Helpers_combineClasses(\"icon\", props_21))))), createElement(\"a\", {\n        className: \"button\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_6)),\n    }))), createElement(\"div\", {\n        className: \"buttons\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_7)),\n    }))), createElement(\"div\", {\n        className: \"navbar-item\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_8)),\n    }))), createElement(\"div\", {\n        className: \"navbar-end\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_9)),\n    }))]), createElement(\"div\", {\n        className: \"navbar-menu\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_10)),\n    }))])]]), createElement(\"nav\", createObj(Helpers_combineClasses(\"navbar\", props_28)))), (props_45 = toList(delay(() => append_2(state_1.ShowQuickView ? singleton_1([\"className\", \"is-active\"]) : empty_1(), delay(() => {\n        let elms_11, elms_14, props_42, elms_13, elms_12, children_12, children_14;\n        return singleton_1([\"children\", Interop_reactApi.Children.toArray([(elms_11 = ofArray([createElement(\"div\", {\n            children: [\"Config\"],\n        }), createElement(\"button\", createObj(Helpers_combineClasses(\"delete\", singleton([\"onClick\", (_arg3) => {\n            dispatch(new Msg(1));\n        }]))))]), createElement(\"header\", {\n            className: \"quickview-header\",\n            children: Interop_reactApi.Children.toArray(Array.from(elms_11)),\n        })), (elms_14 = singleton((props_42 = singleton([\"children\", Interop_reactApi.Children.toArray([(elms_13 = singleton((elms_12 = ofArray([(children_12 = singleton(createElement(\"strong\", {\n            children: [\"Labels size\"],\n        })), createElement(\"p\", {\n            children: Interop_reactApi.Children.toArray(Array.from(children_12)),\n        })), createElement(\"input\", createObj(cons([\"type\", \"range\"], Helpers_combineClasses(\"slider\", ofArray([[\"className\", \"is-fullwidth\"], [\"className\", \"is-primary\"], [\"min\", 1], [\"max\", 24], [\"value\", state_1.Config.Dotsize], [\"onChange\", (ev_3) => {\n            let inputRecord;\n            const value_79 = ev_3.target.valueAsNumber;\n            if ((!(value_79 == null)) ? (!Number.isNaN(value_79)) : false) {\n                dispatch(new Msg(14, (inputRecord = state_1.Config, new MinimalConfig(inputRecord.Scorer, inputRecord.Individuals, inputRecord.Uniquebodyparts, inputRecord.Multianimalbodyparts, inputRecord.Skeleton, inputRecord.Bodyparts, inputRecord.SkeletonColor, round(value_79), inputRecord.Alphavalue, inputRecord.Colormap))));\n            }\n        }]]))))), (children_14 = singleton(createElement(\"strong\", {\n            children: [\"Labels opacity\"],\n        })), createElement(\"p\", {\n            children: Interop_reactApi.Children.toArray(Array.from(children_14)),\n        })), createElement(\"input\", createObj(cons([\"type\", \"range\"], Helpers_combineClasses(\"slider\", ofArray([[\"className\", \"is-fullwidth\"], [\"className\", \"is-primary\"], [\"min\", 0.1], [\"max\", 1], [\"step\", 0.05], [\"value\", state_1.Config.Alphavalue], [\"onChange\", (ev_4) => {\n            let inputRecord_1;\n            const value_94 = ev_4.target.valueAsNumber;\n            if ((!(value_94 == null)) ? (!Number.isNaN(value_94)) : false) {\n                dispatch(new Msg(14, (inputRecord_1 = state_1.Config, new MinimalConfig(inputRecord_1.Scorer, inputRecord_1.Individuals, inputRecord_1.Uniquebodyparts, inputRecord_1.Multianimalbodyparts, inputRecord_1.Skeleton, inputRecord_1.Bodyparts, inputRecord_1.SkeletonColor, inputRecord_1.Dotsize, value_94, inputRecord_1.Colormap))));\n            }\n        }]])))))]), createElement(\"div\", {\n            className: \"hero-body\",\n            children: Interop_reactApi.Children.toArray(Array.from(elms_12)),\n        }))), createElement(\"section\", {\n            className: \"hero\",\n            children: Interop_reactApi.Children.toArray(Array.from(elms_13)),\n        }))])]), createElement(\"div\", createObj(Helpers_combineClasses(\"quickview-block\", props_42))))), createElement(\"div\", {\n            className: \"quickview-body\",\n            children: Interop_reactApi.Children.toArray(Array.from(elms_14)),\n        }))])]);\n    })))), createElement(\"div\", createObj(Helpers_combineClasses(\"quickview\", props_45)))), (elms_18 = ofArray([(props_58 = singleton([\"children\", Interop_reactApi.Children.toArray([(elms_16 = singleton((elms_15 = ofArray([(props_47 = singleton([\"children\", getFileName(state_1.SelectedImage)]), createElement(\"h1\", createObj(Helpers_combineClasses(\"title\", props_47)))), (props_51 = ofArray([[\"id\", \"canvasContainer\"], [\"style\", {\n        overflow: \"hidden\",\n        userSelect: \"none\",\n    }], [\"onContextMenu\", (ev_5) => {\n        const image = document.getElementById(\"canvasImage\");\n        const scale = (image.clientWidth / image.naturalWidth) * state_1.ImageTransformation.Scale;\n        const boundingRect = image.getBoundingClientRect();\n        const patternInput_1 = state_1.SelectedLabel;\n        dispatch(new Msg(13, [patternInput_1[0], patternInput_1[1], new Coordinates((ev_5.clientX - boundingRect.left) / scale, (ev_5.clientY - boundingRect.top) / scale, 0, 0)]));\n    }], [\"children\", Interop_reactApi.Children.toArray([createElement(\"svg\", {\n        [\"transform-origin\"]: \"0px 0px 0px\",\n        transform: join(\" \", map_3((transform) => replace(replace(transform, \"px\", \"\"), \"deg\", \"\"), [(((\"translate(\" + state_1.ImageTransformation.X) + \"px,\") + state_1.ImageTransformation.Y) + \"px)\", (\"scale(\" + state_1.ImageTransformation.Scale) + \")\"])),\n        viewBox: (((((0 + \" \") + 0) + \" \") + 1920) + \" \") + 1080,\n        style: {\n            position: \"absolute\",\n            zIndex: 100,\n        },\n        children: Interop_reactApi.Children.toArray(Array.from(toList(delay(() => svgElements(dispatch, state_1.ImageTransformation, state_1.Config, state_1.LabeledData, state_1.SelectedImage))))),\n    }), createElement(\"img\", {\n        style: {\n            position: \"relative\",\n        },\n        id: \"canvasImage\",\n        src: getFileDisplayUrl(state_1.SelectedImage),\n    })])]]), createElement(\"figure\", createObj(Helpers_combineClasses(\"image\", props_51)))), createElement(\"div\", createObj(Helpers_combineClasses(\"divider\", singleton([\"children\", \"loaded images\"])))), (props_54 = ofArray([[\"style\", {\n        overflowX: \"scroll\",\n    }], [\"children\", Interop_reactApi.Children.toArray(Array.from(toList(delay(() => miniViews(state_1, dispatch)))))]]), createElement(\"div\", createObj(Helpers_combineClasses(\"columns\", props_54))))]), createElement(\"div\", {\n        className: \"hero-body\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_15)),\n    }))), createElement(\"section\", {\n        className: \"hero\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_16)),\n    }))])]), createElement(\"div\", createObj(Helpers_combineClasses(\"column\", props_58)))), (props_76 = ofArray([[\"className\", \"is-2\"], [\"children\", Interop_reactApi.Children.toArray([(children_21 = singleton(createElement(\"strong\", {\n        children: [\"Individuals\"],\n    })), createElement(\"p\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children_21)),\n    })), (patternInput_4 = Helpers_extractClasses(ofArray([[\"onChange\", (e) => {\n        const i = e.target.selectedIndex | 0;\n        dispatch(new Msg(11, [state_1.Config.Individuals[i], state_1.SelectedLabel[1]]));\n    }], [\"children\", Interop_reactApi.Children.toArray(Array.from(toList(delay(() => mapIndexed((i_1, x_2) => {\n        if (state_1.SelectedLabel[0] === x_2) {\n            return createElement(\"option\", {\n                value: state_1.SelectedLabel[0],\n                children: x_2,\n                selected: true,\n            });\n        }\n        else {\n            return createElement(\"option\", {\n                value: i_1,\n                children: x_2,\n            });\n        }\n    }, state_1.Config.Individuals)))))]])), createElement(\"div\", {\n        className: join(\" \", cons(\"select\", patternInput_4[0])),\n        children: Interop_reactApi.Children.toArray([createElement(\"select\", createObj(patternInput_4[1]))]),\n    })), (children_23 = singleton(createElement(\"strong\", {\n        children: [\"Body parts\"],\n    })), createElement(\"p\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children_23)),\n    })), createElement(\"div\", {\n        children: Interop_reactApi.Children.toArray(Array.from(toList(delay(() => map_2((x_3) => {\n            const check = [\"onChange\", (ev_6) => {\n                dispatch(new Msg(11, [state_1.SelectedLabel[0], ev_6.target.value]));\n            }];\n            const props_70 = (state_1.SelectedLabel[1] === x_3) ? ofArray([[\"id\", x_3], [\"value\", x_3], [\"name\", \"radio\"], [\"checked\", \"checked\"], check]) : ofArray([[\"id\", x_3], [\"value\", x_3], [\"name\", \"radio\"], check]);\n            const elms_17 = ofArray([createElement(\"input\", createObj(cons([\"type\", \"radio\"], Helpers_combineClasses(\"is-checkradio\", props_70)))), createElement(\"label\", {\n                htmlFor: x_3,\n                children: x_3,\n            })]);\n            return createElement(\"div\", {\n                className: \"field\",\n                children: Interop_reactApi.Children.toArray(Array.from(elms_17)),\n            });\n        }, state_1.Config.Multianimalbodyparts))))),\n    })])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"column\", props_76))))]), createElement(\"div\", {\n        className: \"columns\",\n        children: Interop_reactApi.Children.toArray(Array.from(elms_18)),\n    }))]);\n    return createElement(\"div\", {\n        children: Interop_reactApi.Children.toArray(Array.from(children_27)),\n    });\n}\n\n","import { Union, Record } from \"./.fable/fable-library.3.1.11/Types.js\";\nimport { MinimalConfig$reflection } from \"./ConfigDecoder.fs.js\";\nimport { union_type, record_type, option_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\nimport { Cmd_none } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport { useFeliz_React__React_useElmish_Static_78C5B8C8 } from \"./.fable/Feliz.UseElmish.1.6.0/UseElmish.fs.js\";\nimport { createElement } from \"react\";\nimport { ConfigLoader } from \"./LoadConfig.fs.js\";\nimport { LabelingCanvas } from \"./Labeling.fs.js\";\nimport { render } from \"react-dom\";\n\nexport class State extends Record {\n    constructor(CurrentConfig) {\n        super();\n        this.CurrentConfig = CurrentConfig;\n    }\n}\n\nexport function State$reflection() {\n    return record_type(\"Main.State\", [], State, () => [[\"CurrentConfig\", option_type(MinimalConfig$reflection())]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"LoadConfig\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Main.Msg\", [], Msg, () => [[[\"Item\", MinimalConfig$reflection()]]]);\n}\n\nexport function init() {\n    return [new State(void 0), Cmd_none()];\n}\n\nexport function update(msg, state) {\n    return [new State(msg.fields[0]), Cmd_none()];\n}\n\nexport function DLCLabeling() {\n    const patternInput = useFeliz_React__React_useElmish_Static_78C5B8C8(init(), (msg, state) => update(msg, state), []);\n    const matchValue = patternInput[0].CurrentConfig;\n    if (matchValue == null) {\n        return createElement(ConfigLoader, {\n            LoadConfig: (config_1) => {\n                patternInput[1](new Msg(0, config_1));\n            },\n        });\n    }\n    else {\n        return createElement(LabelingCanvas, {\n            Config: matchValue,\n        });\n    }\n}\n\nrender(createElement(DLCLabeling, null), document.getElementById(\"feliz-app\"));\n\n"],"sourceRoot":""}